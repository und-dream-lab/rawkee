//
// Copyright (C) 2004-2005 North Dakota State University (http://atl.ndsu.edu/resources/maya_x3d.php) 
// 
//This library is free software; you can redistribute it and/or 
//modify it under the terms of the GNU Lesser General Public License 
//as published by the Free Software Foundation; either version 2.1 of 
//the License, or (at your option) any later version.

//This library is distributed in the hope that it will be useful, but 
//WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY 
//or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public 
//License for more details.

//You should have received a copy of the GNU Lesser General Public License 
//along with this library; if not, write to the Free Software Foundation, Inc., 
//59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

// File: x3d_hanimsite_tables.mel
//
//
// Authors:	Aaron Bergstrom
//         	Computer Visualization Manger
//         	NDSU Archaeology Technologies Laboratory
//         	http://atl.ndsu.edu/
//


//-------------------------------------------------------------------
//MEL string variables for setting X3D Routes
//-------------------------------------------------------------------
global string $eoMenu;
global string $eiMenu;
global string $eoFieldTypeX3D;
global string $ftHAnimSiteX3D[];
global string $inHAnimSiteX3D[];
global string $outHAnimSiteX3D[];
global string $ftX3DArray[];

//---------------------------------
//Array of Field Types for X3D HAnimSite - table
//---------------------------------
$ftHAnimSiteX3D[0] =  "MFNode";     //[in,out] joints         []       [X3DChildNode]
$ftHAnimSiteX3D[1] =  "MFNode";     //[in,out] joints         []       [X3DChildNode]
$ftHAnimSiteX3D[2] =  "SFVec3f";    //[in,out] center           0 0 0    (-?,?)
$ftHAnimSiteX3D[3] =  "MFNode";     //[in,out] joints         []       [X3DChildNode]
$ftHAnimSiteX3D[4] =  "SFNode";     //[in,out] joints         []       [X3DChildNode]
$ftHAnimSiteX3D[5] =  "SFString";   //[in,out] info				[]       [X3DChildNode]
$ftHAnimSiteX3D[6] =  "SFRotation"; //[in,out] rotation         0 0 1 0  [-1,1] or (-?,?)
$ftHAnimSiteX3D[7] =  "SFVec3f";    //[in,out] translation      0 0 0    (-?,?)
$ftHAnimSiteX3D[8] =  "SFRotation"; //[in,out] rotation         0 0 1 0  [-1,1] or (-?,?)
$ftHAnimSiteX3D[9] =  "SFVec3f";    //[in,out] translation      0 0 0    (-?,?)

//-----------------------------------
//Array of event names in for X3D HAnimSite Field Types - table
//-----------------------------------
$inHAnimSiteX3D[0] =  "addChildren";          //[in,out] center           0 0 0    (-?,?)
$inHAnimSiteX3D[1] =  "removeChildren";          //[in,out] center           0 0 0    (-?,?)
$inHAnimSiteX3D[2] =  "set_center";          //[in,out] center           0 0 0    (-?,?)
$inHAnimSiteX3D[3] =  "set_children";          //[in,out] center           0 0 0    (-?,?)
$inHAnimSiteX3D[4] =  "set_metadata";        //[in,out] metadata         NULL     [X3DMetadataObject]
$inHAnimSiteX3D[5] =  "set_name";        //[in,out] rotation         0 0 1 0  [-1,1] or (-?,?)
$inHAnimSiteX3D[6] =  "set_rotation";        //[in,out] rotation         0 0 1 0  [-1,1] or (-?,?)
$inHAnimSiteX3D[7] =  "set_scale";           //[in,out] scale            1 1 1    (0,?)
$inHAnimSiteX3D[8] =  "set_scaleOrientation";//[in,out] scaleOrientation 0 0 1 0  [-1,1] or (-?,?)
$inHAnimSiteX3D[9] =  "set_translation";     //[in,out] translation      0 0 0    (-?,?)

//-----------------------------------

//-----------------------------------
//Array of event names out for X3D HAnimSite Field Types - table
//-----------------------------------
$outHAnimSiteX3D[0] =  "addChildren";          //[in,out] center           0 0 0    (-?,?)
$outHAnimSiteX3D[1] =  "removeChildren";          //[in,out] center           0 0 0    (-?,?)
$outHAnimSiteX3D[2] =  "center_changed";          //[in,out] center           0 0 0    (-?,?)
$outHAnimSiteX3D[3] =  "children_changed";          //[in,out] center           0 0 0    (-?,?)
$outHAnimSiteX3D[4] =  "metadata_changed";        //[in,out] metadata         NULL     [X3DMetadataObject]
$outHAnimSiteX3D[5] =  "name_changed";        //[in,out] rotation         0 0 1 0  [-1,1] or (-?,?)
$outHAnimSiteX3D[6] =  "rotation_changed";        //[in,out] rotation         0 0 1 0  [-1,1] or (-?,?)
$outHAnimSiteX3D[7] =  "scale_changed";           //[in,out] scale            1 1 1    (0,?)
$outHAnimSiteX3D[8] =  "scaleOrientation_changed";     //[in,out] joints         []       [X3DChildNode]
$outHAnimSiteX3D[9] =  "translation_changed";     //[in,out] translation      0 0 0    (-?,?)

//-----------------------------------

//-----------------------------------
//Array of event commands for X3D HAnimSite  - table
//-----------------------------------

//-----------------------------------

//-----------------------------------
//Procedures for building menus for
//HAnimSite Events
//-----------------------------------
//-------------------------------------------------------------------------
//Building the HAnimSite eventOut submenu
global proc buildHAnimSiteEOMenu(string $highlighted)
{
	global string $eoMenu;
	//nTranformX3D[] size = 10 (0-9); eventOut fields are 2-9;
	global string $ftHAnimSiteX3D[];
	global string $outHAnimSiteX3D[];
	global string $eoFieldTypeX3D;

	int $esi;
	for($esi = 2; $esi < 10; $esi++){
		menuItem -l $outHAnimSiteX3D[$esi] -parent $eoMenu -c ("processMenuX3D " + $highlighted + " " + $outHAnimSiteX3D[$esi] + " " + $ftHAnimSiteX3D[$esi] + " 0");
	}
}
//-------------------------------------------------------------------------

//-------------------------------------------------------------------------
//Building the HAnimSite eventIn submenu
global proc buildHAnimSiteEIMenu(string $highlighted)
{
	global string $eiMenu;
	//nHAnimSiteX3D[] size =10 (0-9); eventIn fields are 0-9;
	global string $ftHAnimSiteX3D[];
	global string $inHAnimSiteX3D[];
	global string $eoFieldTypeX3D;

		
	int $esi;
	for($esi=0;$esi<10;$esi++){
		if($eoFieldTypeX3D == $ftHAnimSiteX3D[$esi])
		{
			menuItem -l $inHAnimSiteX3D[$esi] -parent $eiMenu -c ("processMenuX3D " + $highlighted + " " + $inHAnimSiteX3D[$esi] + " " + $ftHAnimSiteX3D[$esi] + " 1");
		}
	}
	
	menuItem -divider true;
	menuItem -l "Reset" -parent $eiMenu -c "resetX3DRoutes";
}
//-------------------------------------------------------------------------

