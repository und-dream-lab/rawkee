//
// Copyright (C) 2004-2005 North Dakota State University (http://atl.ndsu.edu/resources/maya_x3d.php) 
// 
//This library is free software; you can redistribute it and/or 
//modify it under the terms of the GNU Lesser General Public License 
//as published by the Free Software Foundation; either version 2.1 of 
//the License, or (at your option) any later version.

//This library is distributed in the hope that it will be useful, but 
//WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY 
//or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public 
//License for more details.

//You should have received a copy of the GNU Lesser General Public License 
//along with this library; if not, write to the Free Software Foundation, Inc., 
//59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

// File: AEx3dIndexedFaceSetTemplate.mel
//
//
//
// Authors:	Aaron Bergstrom
//         	Computer Visualization Manger
//         	NDSU Archaeology Technologies Laboratory
//         	http://atl.ndsu.edu/
//

global proc AEx3dIndexedFaceSetTemplateNew( string $attrName )
{
	string $nodeName[];
	tokenize($attrName, ".", $nodeName);
	setUITemplate -pst attributeEditorPresetsTemplate;
	if($nodeName[1] == "coordIndex") buildCoordIndex($nodeName[0], $attrName);

	if($nodeName[1] == "colorIndex")
	{
		if(`getAttr ($nodeName[0]+".colorPerVertex")`) buildColorIndex($nodeName[0], $attrName);
	}

	if($nodeName[1] == "normalIndex"){
		if(`getAttr ($nodeName[0]+".normalPerVertex")`) buildNormalIndex($nodeName[0], $attrName);
	}

	if($nodeName[1] == "texCoordIndex"){
		//if(`getAttr ($nodeName[0]+".itci")`)
		buildTexCorIndex($nodeName[0], $attrName);
	}
	setUITemplate -ppt;
}

global proc AEx3dIndexedFaceSetTemplateReplace( string $attrName )
{
	string $nodeName[];
	tokenize($attrName, ".", $nodeName);
	if($nodeName[1] == "coordIndex"){
		deleteUI row_co_01;
		deleteUI row_co_02;
		deleteUI row_co_03;
		deleteUI row_co_04;
		deleteUI row_co_05;
		buildCoordIndex($nodeName[0], $attrName);
	}

	if($nodeName[1] == "texCoordIndex")
	{
//		if(`rowLayout -q -exists row_tec_01`){
			deleteUI row_tec_01;
			deleteUI row_tec_02;
			deleteUI row_tec_03;
//		}
		//if(`getAttr ($nodeName[0]+".itci")`)
		buildTexCorIndex($nodeName[0], $attrName);
	}
	
	if($nodeName[1] == "colorIndex"){
		if(`rowLayout -q -exists row_col_01`){
			deleteUI row_col_01;
			deleteUI row_col_02;
			deleteUI row_col_03;
		}
		if(`getAttr ($nodeName[0]+".colorPerVertex")`) buildColorIndex($nodeName[0], $attrName);
	}

	if($nodeName[1] == "normalIndex"){
		if(`rowLayout -q -exists row_no_01`){
			deleteUI row_no_01;
			deleteUI row_no_02;
			deleteUI row_no_03;
		}
		if(`getAttr ($nodeName[0]+".normalPerVertex")`) buildNormalIndex($nodeName[0], $attrName);
	}
}

global proc AEx3dIndexedFaceSetTemplate(string $nodeName)
{
     editorTemplate -beginScrollLayout;
		
		editorTemplate -addControl "ccw";
		editorTemplate -addControl "convex";
		editorTemplate -addControl "solid";
		editorTemplate -addControl "creaseAngle";
		
		editorTemplate -addControl "colorPerVertex";
		editorTemplate -addControl "normalPerVertex";
		
		editorTemplate -beginLayout "Indexes" -collapse false;
			editorTemplate -callCustom "AEx3dIndexedFaceSetTemplateNew" "AEx3dIndexedFaceSetTemplateReplace" "coordIndex";
			editorTemplate -callCustom "AEx3dIndexedFaceSetTemplateNew" "AEx3dIndexedFaceSetTemplateReplace" "texCoordIndex";
			editorTemplate -callCustom "AEx3dIndexedFaceSetTemplateNew" "AEx3dIndexedFaceSetTemplateReplace" "colorIndex";
			editorTemplate -callCustom "AEx3dIndexedFaceSetTemplateNew" "AEx3dIndexedFaceSetTemplateReplace" "normalIndex";
		editorTemplate -endLayout;		

		editorTemplate -suppress "normalIndex";
		editorTemplate -suppress "colorIndex";
		editorTemplate -suppress "coordIndex";
		editorTemplate -suppress "texCoordIndex";
				
		editorTemplate -aec -ecl "Extra Attributes";
		x3dMPxTransformSuppression();
	 	x3dOptionSuppression();
     editorTemplate -endLayout;
}

global proc buildCoordIndex( string $ann, string $attr )
{
	rowLayout
		-nc 3
		-columnWidth3 10 400 40
		-cl3 "left" "left" "left" row_co_01;
		text -l " ";
		text -l " " -h 20 -fn "smallBoldLabelFont" -rs true -al "left";
		text -l " ";
	setParent ..;
	string $edef = "evalDeferred(\"resetAE\")";
	rowLayout
		-nc 3
		-columnWidth3 90 320 40
		-cl3 "left" "left" "left" row_co_02;
		button -l "Refresh AE" -h 20 -c $edef;
		text -l " " -h 20 -fn "smallBoldLabelFont" -rs true -al "left";
		text -l " ";
	setParent ..;
	
	rowLayout
		-nc 3
		-columnWidth3 10 400 40
		-cl3 "left" "left" "left" row_co_03;
		text -l " ";
		text -l " " -h 20 -fn "smallBoldLabelFont" -rs true -al "left";
		text -l " ";
	setParent ..;
	
	rowLayout
		-nc 3
		-columnWidth3 10 400 40
		-cl3 "left" "left" "left" row_co_04;
		text -l " ";
		text -l "Coordinate Index" -h 20 -fn "smallBoldLabelFont" -rs true -al "left";
		text -l " ";
	setParent ..;
	
	rowLayout
		-nc 3
		-columnWidth3 10 400 40
		-cl3 "left" "left" "left" row_co_05;
		text -l " ";
		scrollField -tx "" -ww true -w 400 -h 100 coordScroll;
		text -l " ";
	setParent ..;
	
	string $meshName[] = `listRelatives -p $ann`;

//	string $coordList = checkTheCoorIndex($ann);
	string $coordList = checkTheCoordIndex($meshName[0]);
	setAttr ($ann+".coordIndex") -type "string" $coordList;
	scrollField -e -tx $coordList -ww true -w 400 -h 100 coordScroll;
}

global proc buildTexCorIndex( string $ann, string $attr )
{
	rowLayout
		-nc 3
		-columnWidth3 10 400 40
		-cl3 "left" "left" "left" row_tec_01;
		text -l " ";
		text -l " " -h 20 -fn "smallBoldLabelFont" -rs true -al "left";
		text -l " ";
	setParent ..;
	
	rowLayout
		-nc 3
		-columnWidth3 10 400 40
		-cl3 "left" "left" "left" row_tec_02;
		text -l " ";
		text -l "Texture Coordinate Index" -h 20 -fn "smallBoldLabelFont" -rs true -al "left";
		text -l " ";
	setParent ..;
	
	rowLayout
		-nc 3
		-columnWidth3 10 400 40
		-cl3 "left" "left" "left" row_tec_03;
		text -l " ";
		scrollField -tx "" -ww true -w 400 -h 100 texCoordScroll;
		text -l " ";
	setParent ..;
	
	string $meshName[] = `listRelatives -p $ann`;
	
//	string $texCoordList = checkTheTexCoorIndex($ann);
	string $texCoordList = checkTheTexCoordIndex($meshName[0]);
	setAttr ($ann+".texCoordIndex") -type "string" $texCoordList;
	scrollField -e -tx $texCoordList -ww true -w 400 -h 100 texCoordScroll;
}

global proc buildColorIndex( string $ann, string $attr )
{
	rowLayout
		-nc 3
		-columnWidth3 10 400 40
		-cl3 "left" "left" "left" row_col_01;
		text -l " ";
		text -l " " -h 20 -fn "smallBoldLabelFont" -rs true -al "left";
		text -l " ";
	setParent ..;
	
	rowLayout
		-nc 3
		-columnWidth3 10 400 40
		-cl3 "left" "left" "left" row_col_02;
		text -l " ";
		text -l "Color Index" -h 20 -fn "smallBoldLabelFont" -rs true -al "left";
		text -l " ";
	setParent ..;
	
	rowLayout
		-nc 3
		-columnWidth3 10 400 40
		-cl3 "left" "left" "left" row_col_03;
		text -l " ";
		scrollField -tx "" -ww true -w 400 -h 100 colorScroll;
		text -l " ";
	setParent ..;
	
	string $meshName[] = `listRelatives -p $ann`;
//	string $colorList = checkTheColorIndex($ann);
	string $colorList = checkTheColorIndex($meshName[0]);
	setAttr ($ann+".colorIndex") -type "string" $colorList;
	scrollField -e -tx $colorList -ww true -w 400 -h 100 colorScroll;
}

global proc buildNormalIndex( string $ann, string $attr )
{
	rowLayout
		-nc 3
		-columnWidth3 10 400 40
		-cl3 "left" "left" "left" row_no_01;
		text -l " ";
		text -l " " -h 20 -fn "smallBoldLabelFont" -rs true -al "left";
		text -l " ";
	setParent ..;
	
	rowLayout
		-nc 3
		-columnWidth3 10 400 40
		-cl3 "left" "left" "left" row_no_02;
		text -l " ";
		text -l "Normal Index" -h 20 -fn "smallBoldLabelFont" -rs true -al "left";
		text -l " ";
	setParent ..;
	
	rowLayout
		-nc 3
		-columnWidth3 10 400 40
		-cl3 "left" "left" "left" row_no_03;
		text -l " ";
		scrollField -tx "" -ww true -w 400 -h 100 normalScroll;
		text -l " ";
	setParent ..;
	
	string $meshName[] = `listRelatives -p $ann`;
	string $normalList = checkTheNormalIndex($meshName[0]);
	setAttr ($ann+".normalIndex") -type "string" $normalList;
	scrollField -e -tx $normalList -ww true -w 400 -h 100 normalScroll;
}
	
