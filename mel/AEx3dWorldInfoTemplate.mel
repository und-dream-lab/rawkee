//
// Copyright (C) 2004-2005 North Dakota State University (http://atl.ndsu.edu/resources/maya_x3d.php) 
// 
//This library is free software; you can redistribute it and/or 
//modify it under the terms of the GNU Lesser General Public License 
//as published by the Free Software Foundation; either version 2.1 of 
//the License, or (at your option) any later version.

//This library is distributed in the hope that it will be useful, but 
//WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY 
//or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public 
//License for more details.

//You should have received a copy of the GNU Lesser General Public License 
//along with this library; if not, write to the Free Software Foundation, Inc., 
//59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

// File: AEx3dWorldInfoTemplate.mel
//
//
//
// Authors:	Aaron Bergstrom
//         	Computer Visualization Manger
//         	NDSU Archaeology Technologies Laboratory
//         	http://atl.ndsu.edu/
//

global proc AEx3dWorldInfoTemplateNew( string $attrName )
{
	string $nodeName[];
	tokenize($attrName, ".", $nodeName);
	setUITemplate -pst attributeEditorPresetsTemplate;
	if($nodeName[1] == "info"){
		buildInfoInterface($nodeName[0], $attrName);
	}
	setUITemplate -ppt;
}

global proc AEx3dWorldInfoTemplateReplace( string $attrName )
{
	string $nodeName[];
	tokenize($attrName, ".", $nodeName);
	if($nodeName[1] == "info")
	{
		deleteUI -lay infoCol;
		buildInfoInterface($nodeName[0], $attrName);
	}
}

global proc AEx3dWorldInfoTemplate( string $nodeName )
{
	editorTemplate -beginScrollLayout;
	editorTemplate -addControl "title";
	editorTemplate -beginLayout "Info" -collapse false;
		editorTemplate -callCustom "AEx3dWorldInfoTemplateNew" "AEx3dWorldInfoTemplateReplace" "info";
	editorTemplate -endLayout;
	editorTemplate -aec -ecl "Extra Attributes";
	x3dOptionSuppression();
	editorTemplate -endLayout;
}

global proc buildInfoInterface(string $nodeName, string $attrName)
{
	columnLayout infoCol;
		rowLayout	-nc 5
					-columnWidth5 10 200 10 80 100
					-cl5 "left" "left" "left" "left" "left";
			text -l " ";
			textField addField;
			text -l " ";
			button -l "Add Info String" -c ("addInfoString "+$nodeName);
			text -l " ";
		setParent ..;
	
		rowLayout	-nc 3
					-columnWidth3 10 380 10
					-cl3 "left" "left" "left";
			text -l " ";
			text -l "Info Strings" -h 20 -fn "smallBoldLabelFont" -rs true -al "left";
			text -l " ";
		setParent ..;

		rowLayout	-nc 3
					-columnWidth3 10 380 10
					-cl3 "left" "left" "left";
			text -l " ";
			textScrollList -nr 10 -dkc ("removeInfoString "+ $nodeName) infoList ;
			text -l " ";
		setParent ..;

		rowLayout	-nc 3
					-columnWidth3 10 380 10
					-cl3 "left" "left" "left";
			text -l " ";
			text -l " ";
			text -l " ";
		setParent ..;

	setParent ..;
	
	appendInfoList($nodeName);
}

global proc removeInfoString(string $nodeName)
{
	int $rIndex[] = `textScrollList -q -sii infoList`;
	if($rIndex[0] > 0)
	{
		int $vLength = `getAttr ($nodeName+".info_cc")`;
		int $skipInt = $rIndex[0]-1;
		string $strings[];
		int $i;
		int $j=0;
		for($i=0;$i<$vLength;$i++)
		{
			if($skipInt != $i)
			{
				$strings[$j] = `getAttr ($nodeName+".info["+$i+"]")`;
				$j=$j+1;
			}
		}
		$strings[$j+1] = "";
	
		for($i=0;$i<$vLength;$i++) setAttr ($nodeName+".info["+$i+"]") -type "string" $strings[$i];
		
		$vLength = $vLength-1;
		setAttr ($nodeName+".info_cc") $vLength;
		resetInfoList($nodeName);
	}
}

global proc addInfoString(string $nodeName)
{
	string $sVal = `textField -q -tx addField`;
	string $cVal[];
	tokenize($sVal, $cVal);
	int $cSize = size($cVal);
	if($cSize > 0)
	{
		int $vLength = `getAttr ($nodeName+".info_cc")`;
		setAttr ($nodeName+".info["+$vLength+"]") -type "string" $sVal;
		$vLength = $vLength+1;
		setAttr ($nodeName+".info_cc") $vLength;
		textField -e -tx "" addField;
		resetInfoList($nodeName);
	}
	else error "Info add field is empty!";
}

global proc resetInfoList(string $nodeName)
{
	textScrollList -e -ra infoList;
	appendInfoList($nodeName);
}

global proc appendInfoList(string $nodeName)
{
	string $aList[] = getInfoList($nodeName);
	int $len = size($aList);
	int $i;
	for($i=0;$i<$len;$i++)
	{
		textScrollList -e -append $aList[$i] infoList;
	}
}

global proc string[] getInfoList(string $nodeName)
{
	string $vString[];
	int $vLength = `getAttr ($nodeName+".info_cc")`;
	int $i;
	for($i=0;$i<$vLength;$i++)
	{
		$vString[$i] = `getAttr ($nodeName+".info["+$i+"]")`;
	}

	return $vString;
}