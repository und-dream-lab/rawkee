//
// Copyright (C) 2004-2005 North Dakota State University (http://atl.ndsu.edu/resources/maya_x3d.php) 
// 
//This library is free software; you can redistribute it and/or 
//modify it under the terms of the GNU Lesser General Public License 
//as published by the Free Software Foundation; either version 2.1 of 
//the License, or (at your option) any later version.

//This library is distributed in the hope that it will be useful, but 
//WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY 
//or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public 
//License for more details.

//You should have received a copy of the GNU Lesser General Public License 
//along with this library; if not, write to the Free Software Foundation, Inc., 
//59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

// File: AEx3dMetadataSetTemplate.mel
//
//
//
// Authors:	Aaron Bergstrom
//         	Computer Visualization Manger
//         	NDSU Archaeology Technologies Laboratory
//         	http://atl.ndsu.edu/
//

global proc AEx3dMetadataSetTemplateNew( string $attrName )
{
	string $nodeName[];
	tokenize($attrName, ".", $nodeName);
	setUITemplate -pst attributeEditorPresetsTemplate;
	if($nodeName[1] == "value_cc"){
		buildMetaSetValueButton($nodeName[0], $attrName);
	}
	setUITemplate -ppt;
}

global proc AEx3dMetadataSetTemplateReplace( string $attrName )
{
	string $nodeName[];
	tokenize($attrName, ".", $nodeName);
	if($nodeName[1] == "valuButton")
	{
		deleteUI -lay vbRow1;
		deleteUI -lay vbRow2;
		buildMetaSetValueButton($nodeName[0], $attrName);
	}
	

}

global proc AEx3dMetadataSetTemplate( string $nodeName )
{
	editorTemplate -beginScrollLayout;
		editorTemplate -addControl "name";
		editorTemplate -addControl "reference";
		editorTemplate -callCustom "AEx3dMetadataSetTemplateNew" "AEx3dMetadataSetTemplateReplace" "value_cc";
		editorTemplate -aec -ecl "Extra Attributes";
		editorTemplate -suppress "value_cc";
		editorTemplate -suppress "value";
		x3dOptionSuppression();
	editorTemplate -endLayout;
}

global proc	buildMetaSetValueButton(string $nodeName, string $fullAttr)
{
	string $keyString = `getAttr $fullAttr`;
	
	rowLayout
		-nc 1
		-columnWidth1 460
		vbRow1;
		text -l " " -h 20 -fn "smallBoldLabelFont" -rs true -al "left";
	setParent ..;
	
	rowLayout
		-nc 3
		-columnWidth3 10 440 10
		vbRow2;
		text -l " ";

		frameLayout
			-cl false
			-cll false
			-l "Metadata Nodes"
			-bv false
			vbFrame1;
			columnLayout;
				rowLayout
					-nc 1
					-columnWidth1 440;
					text -l " " -h 5 -fn "smallBoldLabelFont" -rs true -al "left";
				setParent ..;
			
				rowLayout
					-nc 5
					-columnWidth5 190 10 30 10 190
					-cl5 "left" "left" "both" "right" "right";
					text -l "X3D Value Field List" -h 20 -fn "smallBoldLabelFont" -rs true -al "left";
					text -l " " -h 20 -fn "smallBoldLabelFont" -rs true -al "left";
					text -l " " -h 20 -fn "smallBoldLabelFont" -rs true -al "left";
					text -l " " -h 20 -fn "smallBoldLabelFont" -rs true -al "left";
					text -l "Scene Metadata List" -h 20 -fn "smallBoldLabelFont" -rs true -al "left";
				setParent ..;
				
				rowLayout
					-nc 5
					-columnWidth5 190 10 30 10 190
					-cl5 "left" "left" "both" "right" "right";
					textScrollList -nr 10 -ams false -dkc ("removeMetaSetValue " + $nodeName) valueList;
					string $vList[] = getThisValueList($nodeName);
					int $i;
					for($i=0; $i < size($vList); $i++)
					{
						textScrollList -e -a $vList[$i] valueList;
					}
					text -l " ";
					columnLayout;
						text -l " ";
						text -l " ";
						text -l " ";
						button -l " <-- " -c ("addMetadataValue " + $nodeName);
						text -l " ";
						text -l " ";
					setParent ..;
					text -l " ";
					textScrollList -nr 10 -ams false metadataList;
					string $mList[] = `ls -typ "x3dMetadataDouble" -typ "x3dMetadataFloat" -typ "x3dMetadataInteger" -typ "x3dMetadataString" -typ "x3dMetadataSet"`;
					for($i=0; $i < size($mList); $i++)
					{
						if($mList[$i] != $nodeName) textScrollList -e -a $mList[$i] metadataList;
					}
				setParent ..;
			setParent ..;
		setParent ..;
		text -l " ";
}

global proc addMetadataValue(string $nodeName)
{
	string $value[] = `textScrollList -q -si metadataList`;
	if($value[0] != "")
	{
		string $vList[] = getThisValueList($nodeName);
		int $hasIt = 0;
		int $i;
		for($i=0;$i<size($vList);$i++)
		{
			if($value[0] == $vList[$i]) $hasIt = 1;
		}

		if(!$hasIt)
		{
			int $vLength = `getAttr ($nodeName+".value_cc")`;
			setAttr ($nodeName+".value["+$vLength+"]") -type "string" $value[0];
			textScrollList -e -a $value[0] valueList;
			$vLength = $vLength+1;
			setAttr ($nodeName+".value_cc") $vLength;
		}
	}
}

global proc removeMetaSetValue(string $nodeName)
{
	int $vLength = `getAttr ($nodeName+".value_cc")`;
	
	string $vString1[] = `textScrollList -q -si valueList`;
	int $vInt[] = `textScrollList -q -sii valueList`;
	string $vString2[];
	if($vString1[0] != "")
	{
		textScrollList -e -ra valueList;
		string $vList[] = getThisValueList($nodeName);
		
		int $j=0;
		int $i;
		for($i=0; $i<$vLength; $i++)
		{
			if($vString1[0] != $vList[$i])
			{
				$vString2[$j] = $vList[$i];	
				setAttr ($nodeName+".value["+$j+"]") -type "string" $vString2[$j];
				textScrollList -e -a $vString2[$j] valueList;
				$j=$j+1;
			}
		}
		$vLength = $vLength-1;
		setAttr ($nodeName+".value["+$vLength+"]") -type "string" "";
		setAttr ($nodeName+".value_cc") $vLength;
		if($vLength != 0)
		{
			if($vInt[0]!=1) $vInt[0] = $vInt[0]-1;
			textScrollList -e -sii $vInt[0] valueList;
		}
		
	}
}

global proc string[] getThisValueList(string $nodeName)
{
	string $vString[];
	string $vString2[];
	string $mList[] = `ls -typ "x3dMetadataDouble" -typ "x3dMetadataFloat" -typ "x3dMetadataInteger" -typ "x3dMetadataString" -typ "x3dMetadataSet"`;
	int $vLength = `getAttr ($nodeName+".value_cc")`;
	int $i;
	for($i=0;$i<$vLength;$i++)
	{
		$vString[$i] = `getAttr ($nodeName+".value["+$i+"]")`;
	}

	int $k=0;
	int $vs = size($vString);
	for($i=0;$i<$vs;$i++)
	{
		int $j;
		int $m = size($mList);
		int $isFound = 0;
		for($j=0;$j<$m;$j++)
		{
			if($vString[$i] == $mList[$j]) $isFound = 1;
		}
		if($isFound)
		{
			$vString2[$k] = $vString[$i];
			setAttr ($nodeName+".value["+$k+"]") -type "string" $vString2[$k];
			$k=$k+1;
		}
	}
	$vLength = size($vString2);
	setAttr ($nodeName+".value_cc") $vLength;
	return $vString2;
}
