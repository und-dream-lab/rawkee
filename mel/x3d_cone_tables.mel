//
// Copyright (C) 2004 North Dakota State University (http://atl.ndsu.edu/resources/maya_x3d.php) 
// 
//This library is free software; you can redistribute it and/or 
//modify it under the terms of the GNU Lesser General Public License 
//as published by the Free Software Foundation; either version 2.1 of 
//the License, or (at your option) any later version.

//This library is distributed in the hope that it will be useful, but 
//WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY 
//or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public 
//License for more details.

//You should have received a copy of the GNU Lesser General Public License 
//along with this library; if not, write to the Free Software Foundation, Inc., 
//59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

// File: x3d_cone_tables.mel
//
//
// Authors:	Aaron Bergstrom
//         	Computer Visualization Manger
//         	NDSU Archaeology Technologies Laboratory
//         	http://atl.ndsu.edu/
//


//-------------------------------------------------------------------
//MEL string variables for setting X3D Routes
//-------------------------------------------------------------------
global string $eoMenu;
global string $eiMenu;
global string $eoFieldTypeX3D;
global string $ftConeX3D[];
global string $inConeX3D[];
global string $outConeX3D[];

//---------------------------------
//Array of Field Types for X3D Cone - table
//---------------------------------

$ftConeX3D[0] =  "SFNode";



//-----------------------------------
//Array of event in names for X3D Cone Field Types - table
//-----------------------------------

$inConeX3D[0] =  "set_metadata";


//-----------------------------------

//-----------------------------------
//Array of event out names for X3D Cone Field Types - table
//-----------------------------------

$outConeX3D[0] =  "metadata_changed";	


//-----------------------------------

//-----------------------------------
//Array of event commands for X3D Cone  - table
//-----------------------------------

//-----------------------------------

//-----------------------------------
//Procedures for building menus for
//Cone Events
//-----------------------------------
//-------------------------------------------------------------------------
//Building the Cone eventOut submenu
global proc buildConeEOMenu(string $highlighted)
{
	global string $eoMenu;
	//nConeX3D[] size = 1 (0); eventOut fields are 0;
	global string $ftConeX3D[];
	global string $outConeX3D[];
	global string $eoFieldTypeX3D;

	int $esi;
	for($esi = 0; $esi < 1; $esi++){
		menuItem -l $outConeX3D[$esi] -parent $eoMenu -c ("processMenuX3D " + $highlighted + " " + $outConeX3D[$esi] + " " + $ftConeX3D[$esi] + " 0");
	}
}
//-------------------------------------------------------------------------

//-------------------------------------------------------------------------
//Building the Cone eventIn submenu
global proc buildConeEIMenu(string $highlighted)
{
	global string $eiMenu;
	//nConeX3D[] size =1 (0); eventIn fields are 0;
	global string $ftConeX3D[];
	global string $inConeX3D[];
	global string $eoFieldTypeX3D;

		
	int $esi;
	for($esi=0;$esi<1;$esi++){
		if($eoFieldTypeX3D == $ftConeX3D[$esi])
		{
			menuItem -l $inConeX3D[$esi] -parent $eiMenu -c ("processMenuX3D " + $highlighted + " " + $inConeX3D[$esi] + " " + $ftConeX3D[$esi] + " 1");
		}
	}
	
	menuItem -divider true;
	menuItem -l "Reset" -parent $eiMenu -c "resetX3DRoutes";
}
//-------------------------------------------------------------------------


