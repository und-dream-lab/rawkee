//
// Copyright (C) 2004-2005 North Dakota State University (http://atl.ndsu.edu/resources/maya_x3d.php) 
// 
//This library is free software; you can redistribute it and/or 
//modify it under the terms of the GNU Lesser General Public License 
//as published by the Free Software Foundation; either version 2.1 of 
//the License, or (at your option) any later version.

//This library is distributed in the hope that it will be useful, but 
//WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY 
//or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public 
//License for more details.

//You should have received a copy of the GNU Lesser General Public License 
//along with this library; if not, write to the Free Software Foundation, Inc., 
//59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

// File: AEx3dAnchorTemplate.mel
//
//
//
// Authors:	Aaron Bergstrom
//         	Computer Visualization Manger
//         	NDSU Archaeology Technologies Laboratory
//         	http://atl.ndsu.edu/
//

global proc AEx3dAnchorTemplateNew( string $attrName )
{
	string $nodeName[];
	tokenize($attrName, ".", $nodeName);
	setUITemplate -pst attributeEditorPresetsTemplate;
	if($nodeName[1] == "parameter"){
		buildParameterAEInterface($nodeName[0], $attrName);
	}
	if($nodeName[1] == "url"){
		buildURLAEInterface($nodeName[0], $attrName);
	}

	setUITemplate -ppt;
}

global proc AEx3dAnchorTemplateReplace( string $attrName )
{
	string $nodeName[];
	tokenize($attrName, ".", $nodeName);
	if($nodeName[1] == "parameter")
	{
		deleteUI -lay paraRow;
		buildParameterAEInterface($nodeName[0], $attrName);
	}
	
	if($nodeName[1] == "url")
	{
		deleteUI -lay urlRow;
		buildURLAEInterface($nodeName[0], $attrName);
	}
	
}

global proc AEx3dAnchorTemplate( string $nodeName )
{
     editorTemplate -beginScrollLayout;
	 	editorTemplate -addControl "description";
		editorTemplate -beginLayout "Parameters" -collapse false;
			editorTemplate -callCustom "AEx3dAnchorTemplateNew" "AEx3dAnchorTemplateReplace" "parameter";
		editorTemplate -endLayout;
		editorTemplate -beginLayout "URLs" -collapse false;
			editorTemplate -callCustom "AEx3dAnchorTemplateNew" "AEx3dAnchorTemplateReplace" "url";
		editorTemplate -endLayout;
		editorTemplate -suppress "parameter";
		editorTemplate -suppress "url";
		editorTemplate -beginLayout "Maya Transform Attributes" -collapse true;
		 	editorTemplate -addControl "translate";
		 	editorTemplate -addControl "rotate";
	 		editorTemplate -addControl "scale";
		 	editorTemplate -addControl "shear";
		 	editorTemplate -addControl "rotatePivot";
	 		editorTemplate -addControl "scalePivot";
		editorTemplate -endLayout;
		editorTemplate -aec -ecl "Extra Attributes";
		x3dMPxTransformSuppression();
	 	x3dOptionSuppression();
     editorTemplate -endLayout;
}

global proc buildParameterAEInterface(string $nodeName, string $attrName)
{

	string $params[];
	int $pCount = `getAttr ($nodeName+".parameter_cc")`;
	int $i;
	for($i=0;$i<$pCount;$i++)
	{
		$params[$i] = `getAttr ($nodeName+".parameter["+$i+"]")`;
	}
	rowLayout
		-nc 3 
		-cw3 10 430 10 paraRow;
		text -l " ";
		columnLayout;

			rowLayout -nc 2 -cw2 215 215;
				text -l " " -h 10;
				text -l " " -h 10;
			setParent ..;
			
			rowLayout -nc 3 -cw3 10 300 120;
				text -l " " -h 25;
				textScrollList -nr 6 -ams false -dkc ("deleteAnchorParam "+$nodeName) tsParaList;
				text -l " " -h 25;
			setParent ..;
			
			rowLayout -nc 2 -cw2 215 215;
				text -l " " -h 10;
				text -l " " -h 10;
			setParent ..;

			rowLayout -nc 4 -cw4 10 80 220 120;
				text -l " " -h 25;
				button -l "Add Parameter" -c ("addAnchorParam "+$nodeName);
				textField newParam;
				text -l " " -h 25;
			setParent ..;
		setParent ..;
		text -l " ";
	setParent ..;
	for($i=0;$i<$pCount;$i++)
	{
		textScrollList -e -append $params[$i] tsParaList;
	}
}

global proc buildURLAEInterface(string $nodeName, string $attrName)
{
	string $urls[];
	int $uCount = `getAttr ($nodeName+".url_cc")`;
	int $i;
	for($i=0;$i<$uCount;$i++)
	{
		$urls[$i] = `getAttr ($nodeName+".url["+$i+"]")`;
	}
	rowLayout
		-nc 3 
		-cw3 10 430 10 urlRow;
		text -l " ";
		columnLayout;

			rowLayout -nc 2 -cw2 215 215;
				text -l " " -h 10;
				text -l " " -h 10;
			setParent ..;
			
			rowLayout -nc 3 -cw3 10 300 120;
				text -l " " -h 25;
				textScrollList -nr 6 -ams false -dkc ("deleteAnchorUrl "+$nodeName) tsUrlList;
				text -l " " -h 25;
			setParent ..;
			
			rowLayout -nc 2 -cw2 215 215;
				text -l " " -h 10;
				text -l " " -h 10;
			setParent ..;

			rowLayout -nc 4 -cw4 10 80 220 120;
				text -l " " -h 25;
				button -l "Add URL" -c ("addAnchorUrl "+$nodeName);
				textField newUrl;
				text -l " " -h 25;
			setParent ..;
		setParent ..;
		text -l " ";
	setParent ..;			
	for($i=0;$i<$uCount;$i++)
	{
		textScrollList -e -append $urls[$i] tsUrlList;
	}
}
global proc addAnchorParam(string $nodeName)
{
	string $wholeString = `textField -q -tx newParam`;
	string $breakString[];
	tokenize ($wholeString, $breakString);
	int $blankLength = size($breakString);

	if($blankLength > 1) error("No spaces are allowed in the Parameter field!!!");
	else if($breakString[0] != "")
	{
		string $equalString[];
		tokenize($breakString[0], "=", $equalString);
		int $eqInt = size($equalString);
		if($eqInt == 2)
		{
			int $pc = `getAttr ($nodeName+".parameter_cc")`;
			setAttr ($nodeName+".parameter["+$pc+"]") -type "string" $breakString[0];
			$pc = $pc + 1;
			setAttr ($nodeName+".parameter_cc") $pc;
			textScrollList -e -ra tsParaList;
			int $i;
			for($i=0;$i<$pc;$i++)
			{
				string $tString = `getAttr ($nodeName+".parameter["+$i+"]")`;
				textScrollList -e -append $tString tsParaList;
			}
		}
		else error("Your parameter must contain two parts seperated by an 'equals' sign!!!");
	}
	else error("You can't add a Parameter that contains no text!!!");
}

global proc addAnchorUrl(string $nodeName)
{
	string $wholeString = `textField -q -tx newUrl`;
	string $breakString[];
	tokenize ($wholeString, $breakString);
	int $blankLength = size($breakString);
	
	if($blankLength > 1) error("No spaces are allowed in the URL field!!!");
	else if($breakString[0] != "")
	{
		int $uc = `getAttr ($nodeName+".url_cc")`;
		setAttr ($nodeName+".url["+$uc+"]") -type "string" $breakString[0];
		$uc = $uc + 1;
		setAttr ($nodeName+".url_cc") $uc;
		int $i;
		for($i=0;$i<$uc;$i++)
		{
			string $tString = `getAttr ($nodeName+".url["+$i+"]")`;
			textScrollList -e -append $tString tsUrlList;
		}
	}
	else error("You can't add a URL that contains no text!!!");
}

global proc deleteAnchorUrl(string $nodeName)
{
	int $sItems[] = `textScrollList -q -sii tsUrlList`;
	if($sItems[0] !=0)
	{
		int $uc = `getAttr ($nodeName+".url_cc")`;
		int $selItem = $sItems[0]-1;
		string $newList[];
		int $i;
		int $j=0;
		textScrollList -e -ra tsUrlList;
		for($i=0;$i<$uc;$i++)
		{
			if($i!=$selItem)
			{
				$newList[$j] = `getAttr ($nodeName+".url["+$i+"]")`;
				textScrollList -e -append $newList[$j] tsUrlList;
				$j=$j+1;
			}
		}
		$uc = $uc-1;
		setAttr ($nodeName+".url["+$uc+"]") -type "string" "";
		setAttr ($nodeName+".url_cc") $uc;
		for($i=0;$i<$uc;$i++)
		{
			setAttr ($nodeName+".url["+$i+"]") -type "string" $newList[$i];
		}
		int $size = size($newList);
		if($size > 0)
		{
			if($sItems[0] == 1) textScrollList -e -sii $sItems[0] tsUrlList;
			else textScrollList -e -sii ($sItems[0]-1) tsUrlList;
		}
	}
}

global proc deleteAnchorParam(string $nodeName)
{
	int $sItems[] = `textScrollList -q -sii tsParaList`;
	if($sItems[0] !=0)
	{
		int $pc = `getAttr ($nodeName+".parameter_cc")`;
		int $selItem = $sItems[0]-1;
		string $newList[];
		int $i;
		int $j=0;
		textScrollList -e -ra tsParaList;
		for($i=0;$i<$pc;$i++)
		{
			if($i!=$selItem)
			{
				$newList[$j] = `getAttr ($nodeName+".parameter["+$i+"]")`;
				textScrollList -e -append $newList[$j] tsParaList;
				$j=$j+1;
			}
		}
		$pc = $pc-1;
		setAttr ($nodeName+".parameter["+$pc+"]") -type "string" "";
		setAttr ($nodeName+".parameter_cc") $pc;
		for($i=0;$i<$pc;$i++)
		{
			setAttr ($nodeName+".parameter["+$i+"]") -type "string" $newList[$i];
		}
		int $size = size($newList);
		if($size > 0)
		{
			if($sItems[0] == 1) textScrollList -e -sii $sItems[0] tsParaList;
			else textScrollList -e -sii ($sItems[0]-1) tsParaList;
		}
	}
}