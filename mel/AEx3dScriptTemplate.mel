//
// Copyright (C) 2004-2005 North Dakota State University (http://atl.ndsu.edu/resources/maya_x3d.php) 
// 
//This library is free software; you can redistribute it and/or 
//modify it under the terms of the GNU Lesser General Public License 
//as published by the Free Software Foundation; either version 2.1 of 
//the License, or (at your option) any later version.

//This library is distributed in the hope that it will be useful, but 
//WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY 
//or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public 
//License for more details.

//You should have received a copy of the GNU Lesser General Public License 
//along with this library; if not, write to the Free Software Foundation, Inc., 
//59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

// File: AEx3dScriptTemplate.mel
//
//
//
// Authors:	Aaron Bergstrom
//         	Computer Visualization Manger
//         	NDSU Archaeology Technologies Laboratory
//         	http://atl.ndsu.edu/
//
global string $ftX3DArray[];

global proc AEx3dScriptTemplateNew( string $attrName )
{
	global string $enum01Group;
	string $nodeName[];
	tokenize($attrName, ".", $nodeName);
  	setUITemplate -pst attributeEditorPresetsTemplate;
	
	if($nodeName[1] == "fieldName")
	{
		buildFieldCreatorInterface($nodeName[0], $nodeName[1], $attrName);
	}
	if($nodeName[1] == "x3dFieldCount")
	{
		buildFieldEditorInterface($nodeName[0], $nodeName[1], $attrName);
	}
	if($nodeName[1] == "remoteScript")
	{
		buildRemoteURLInterface($nodeName[0], $nodeName[1], $attrName);
	}
	if($nodeName[1] == "localScript")
	{
		buildLocalURLInterface($nodeName[0], $nodeName[1], $attrName);
	}
	setUITemplate -ppt;
}
	
global proc AEx3dScriptTemplateReplace( string $attrName )
{
	string $nodeName[];
	tokenize($attrName, ".", $nodeName);
	
	if($nodeName[1] == "fieldName")
	{
		deleteUI -lay upperColumn;
		buildFieldCreatorInterface($nodeName[0], $nodeName[1], $attrName);
	}
	
	if($nodeName[1] == "x3dFieldCount")
	{
		deleteUI -lay editorColumn;
		buildFieldEditorInterface($nodeName[0], $nodeName[1], $attrName);
	}
	
	if($nodeName[1] == "remoteScript")
	{
		deleteUI -lay rUrlColumn;
		buildRemoteURLInterface($nodeName[0], $nodeName[1], $attrName);
	}
	
	if($nodeName[1] == "localScript")
	{
		deleteUI -lay lUrlColumn;
		buildLocalURLInterface($nodeName[0], $nodeName[1], $attrName);
	}
}

global proc AEx3dScriptTemplate( string $nodeName )
{
    editorTemplate -beginScrollLayout;
		editorTemplate -beginLayout "Standard X3D Fields and Events" -collapse false;
			editorTemplate -addControl "directOutput";
			editorTemplate -addControl "mustEvaluate";
		editorTemplate -endLayout;

		editorTemplate -beginLayout "X3D Field Creation Interface" -collapse false;
			editorTemplate -callCustom "AEx3dScriptTemplateNew" "AEx3dScriptTemplateReplace" "fieldName";
		editorTemplate -endLayout;
		
		editorTemplate -beginLayout "X3D Field Editing Interface" -collapse false;
			editorTemplate -callCustom "AEx3dScriptTemplateNew" "AEx3dScriptTemplateReplace" "x3dFieldCount";
		editorTemplate -endLayout;
		
		editorTemplate -beginLayout "X3D Remote URL Creation and Editing Interface" -collapse false;
			editorTemplate -callCustom "AEx3dScriptTemplateNew" "AEx3dScriptTemplateReplace" "remoteScript";
		editorTemplate -endLayout;
		
		editorTemplate -beginLayout "X3D Local URL Creation and Editing Interface" -collapse false;
			editorTemplate -callCustom "AEx3dScriptTemplateNew" "AEx3dScriptTemplateReplace" "localScript";
		editorTemplate -endLayout;
		
	editorTemplate -aec -ecl "Extra Controls";
	x3dOptionSuppression();
	editorTemplate -endScrollLayout;
}

global proc writeFields(string $nodeName, int $fLengths)
{
	int $i;
	for($i=0; $i<$fLengths;$i++)
	{
		string $acType = `getAttr ($nodeName + ".fieldAccess[" + $i + "]")`;
		string $fiType = `getAttr ($nodeName + ".fieldType[" + $i + "]")`;
		string $fiName = `getAttr ($nodeName + ".fieldName[" + $i +"]")`;
		
		rowLayout
		-nc 6
		-columnWidth6 10 100 100 100 80 60;
			text -l " " -w 10 -al "left";
			text -l $acType -w 100 -al "left";
			text -l $fiType -w 100 -al "left";
			text -l $fiName -w 100 -al "left";
			if($acType == "inputOutput" || $acType == "initializeOnly") button -l "  Edit Value" -h 25 -w 80 -al "left" -c ("openX3DScriptFieldEditWindow " + $nodeName + " " + $i);
			else text -l " " -h 25 -w 80 -al "left";
			button -l "Remove" -h 25 -w 50 -al "left" -c ("removeX3DScriptField " +$nodeName+" "+ $i);
		setParent ..;
	}
}

global proc setFieldValue(string $nodeName, string $attrName, string $ft, string $value)
{
	if($ft == "SFBool")
	{
		int $iVal = (int)$value;
		setAttr ($nodeName+"."+$attrName) $iVal;
	}
	else if($ft == "SFColor" || $ft == "SFRotation" || $ft == "MFColor" || $ft == "MFRotation")
	{
		string $values[];
		tokenize($value, $values);
		float $floats[];
		$floats[0] = (float)$values[0];
		$floats[1] = (float)$values[1];
		$floats[2] = (float)$values[2];
		setAttr ($nodeName+"."+$attrName) -type float3 $floats[0] $floats[1] $floats[2];
	}
	else if($ft == "SFColorRGBA" || $ft == "MFColorRGBA")
	{
		string $values[];
		tokenize($value, $values);
		float $floats[];
		$floats[0] = (float)$values[0];
		$floats[1] = (float)$values[1];
		$floats[2] = (float)$values[2];
		$floats[3] = (float)$values[3];
		setAttr ($nodeName+"."+$attrName+"_0") $floats[0];
		setAttr ($nodeName+"."+$attrName+"_1") $floats[1];
		setAttr ($nodeName+"."+$attrName+"_2") $floats[2];
		setAttr ($nodeName+"."+$attrName+"_3") $floats[3];
	}
	else if($ft == "SFFloat" || $ft == "MFFloat")
	{
		float $aFloat = (float)$value;
		setAttr ($nodeName+"."+$attrName) $aFloat;
	}
	else if($ft == "SFDouble" || $ft == "SFTime" || $ft == "MFDouble" || $ft == "MFTime")
	{
		float $aFloat = (float)$value;
		setAttr ($nodeName+"."+$attrName) $aFloat;
	}
	else if($ft == "SFImage" || $ft == "SFString" || $ft == "SFNode" || $ft == "MFImage" || $ft == "MFString" || $ft == "MFNode")
	{
		setAttr ($nodeName+"."+$attrName) -type "string" $value;
	}
	else if($ft == "SFInt32" || $ft == "MFInt32")
	{
		int $aInt = (int)$value;
		setAttr ($nodeName+"."+$attrName) $aInt;
	}
	else if($ft == "SFVec2d" || $ft == "MFVec2d")
	{
		string $values[];
		tokenize($value, $values);
		float $floats[];
		$floats[0] = (float)$values[0];
		$floats[1] = (float)$values[1];
		setAttr ($nodeName+"."+$attrName) -type double2 $floats[0] $floats[1];
	}
	else if($ft == "SFVec2f" || $ft == "MFVec2f")
	{
		string $values[];
		tokenize($value, $values);
		float $floats[];
		$floats[0] = (float)$values[0];
		$floats[1] = (float)$values[1];
		setAttr ($nodeName+"."+$attrName) -type float2 $floats[0] $floats[1];
	}
	else if($ft == "SFVec3d" || $ft == "MFVec3d")
	{
		string $values[];
		tokenize($value, $values);
		float $floats[];
		$floats[0] = (float)$values[0];
		$floats[1] = (float)$values[1];
		$floats[2] = (float)$values[2];
		setAttr ($nodeName+"."+$attrName) -type double3 $floats[0] $floats[1] $floats[2];
	}
	else if($ft == "SFVec3f" || $ft == "MFVec3f")
	{
		string $values[];
		tokenize($value, $values);
		float $floats[];
		$floats[0] = (float)$values[0];
		$floats[1] = (float)$values[1];
		$floats[2] = (float)$values[2];
		setAttr ($nodeName+"."+$attrName) -type float3 $floats[0] $floats[1] $floats[2];
	}
}

global proc setCompileFour(string $nodeName, string $attrName, string $ft)
{
	float $fValue1 = `floatField -q -v float1`;
	float $fValue2 = `floatField -q -v float2`;
	float $fValue3 = `floatField -q -v float3`;
	float $fValue4 = `floatField -q -v float4`;
	string $fValues = "" + $fValue1 + " " + $fValue2 + " " + $fValue3 + " " + $fValue4;
	setFieldValue($nodeName, $attrName, $ft, $fValues);
}

global proc setCompileFourM(string $nodeName, string $attrName, string $ft, string $i)
{
	float $fValue1 = `floatField -q -v ("float1"+$i)`;
	float $fValue2 = `floatField -q -v ("float2"+$i)`;
	float $fValue3 = `floatField -q -v ("float3"+$i)`;
	float $fValue4 = `floatField -q -v ("float4"+$i)`;
	string $fValues = "" + $fValue1 + " " + $fValue2 + " " + $fValue3 + " " + $fValue4;
	setFieldValue($nodeName, $attrName, $ft, $fValues);
}

global proc setCompileThree(string $nodeName, string $attrName, string $ft)
{
	float $fValue1 = `floatField -q -v float1`;
	float $fValue2 = `floatField -q -v float2`;
	float $fValue3 = `floatField -q -v float3`;
	string $fValues = "" + $fValue1 + " " + $fValue2 + " " + $fValue3;
	setFieldValue($nodeName, $attrName, $ft, $fValues);
}

global proc setCompileThreeM(string $nodeName, string $attrName, string $ft, string $i)
{
	float $fValue1 = `floatField -q -v ("float1"+$i)`;
	float $fValue2 = `floatField -q -v ("float2"+$i)`;
	float $fValue3 = `floatField -q -v ("float3"+$i)`;
	string $fValues = "" + $fValue1 + " " + $fValue2 + " " + $fValue3;
	setFieldValue($nodeName, $attrName, $ft, $fValues);
}

global proc setCompileTwo(string $nodeName, string $attrName, string $ft)
{
	float $fValue1 = `floatField -q -v float1`;
	float $fValue2 = `floatField -q -v float2`;
	string $fValues = "" + $fValue1 + " " + $fValue2;
	setFieldValue($nodeName, $attrName, $ft, $fValues);
}

global proc setCompileTwoM(string $nodeName, string $attrName, string $ft, string $i)
{
	float $fValue1 = `floatField -q -v ("float1"+$i)`;
	float $fValue2 = `floatField -q -v ("float2"+$i)`;
	string $fValues = "" + $fValue1 + " " + $fValue2;
	setFieldValue($nodeName, $attrName, $ft, $fValues);
}

global proc setCompileOne(string $nodeName, string $attrName, string $ft)
{
	float $fValue1 = `floatField -q -v float1`;
	string $fValues = "" + $fValue1;
	setFieldValue($nodeName, $attrName, $ft, $fValues);
}

global proc setCompileOneM(string $nodeName, string $attrName, string $ft, string $i)
{
	float $fValue1 = `floatField -q -v ("float1"+$i)`;
	string $fValues = "" + $fValue1;
	setFieldValue($nodeName, $attrName, $ft, $fValues);
}

global proc setCompileOneInt(string $nodeName, string $attrName, string $ft)
{
	float $iValue1 = `intField -q -v int1`;
	string $iValues = "" + $iValue1;
	setFieldValue($nodeName, $attrName, $ft, $iValues);
}

global proc setCompileOneIntM(string $nodeName, string $attrName, string $ft, string $i)
{
	float $iValue1 = `intField -q -v ("int1"+$i)`;
	string $iValues = "" + $iValue1;
	setFieldValue($nodeName, $attrName, $ft, $iValues);
}

global proc setCompileOneStr(string $nodeName, string $attrName, string $ft)
{
	string $sValue = `textField -q -tx str1`;
	setFieldValue($nodeName, $attrName, $ft, $sValue);
}

global proc setCompileOneStrM(string $nodeName, string $attrName, string $ft, string $i)
{
	string $sValue = `textField -q -tx ("str1"+$i)`;
	setFieldValue($nodeName, $attrName, $ft, $sValue);
}

global proc appendToX3DMFField(string $ann, string $fName, string $ft, string $feWindow, string $iStr)
{
	string $fvstr = "x3d_"+$fName;
	string $fvstrcc = $fvstr+"_cc";
	int $intCC = `getAttr ($ann+"."+$fvstrcc)`;
	int $i = (int)$iStr;
	int $bc = `getAttr ($ann+".x3dbc")`;
	string $bgen = "x3d_gen_bc_"+$bc;
	int $newIntCC = $intCC+1;
	int $k;

	if ($ft == "MFBool")
	{
		addAttr -ln $bgen -nc $newIntCC -h true -at compound $ann;
		for($k=0; $k<$newIntCC; $k++)
		{
			addAttr -ln ($bgen+"_"+$k) -h true -at bool -parent $bgen $ann;
		}
		for($k=0;$k<$intCC;$k++)
		{
			string $fvstrnew = $fvstr+"_"+$k;
			int $iVal = `getAttr ($ann+"."+$fvstrnew)`;
			setAttr ($ann+"."+$bgen+"_"+$k) $iVal;
		}
		deleteAttr ($ann+"."+$fvstr);
		renameAttr ($ann+"."+$bgen) $fvstr;
		for($k=0; $k<$newIntCC; $k++)
		{
			renameAttr ($ann+"."+$bgen+"_"+$k) ($fvstr+"_"+$k);
		}
		setAttr ($ann+"."+$fvstrcc) $newIntCC;
	}
	else if ($ft == "MFColor")
	{
		addAttr -ln $bgen -nc $newIntCC -h true -at compound $ann;
		for($k=0; $k<$newIntCC; $k++)
		{
			addAttr -ln ($bgen+"_"+$k) -h true -at float3 -parent $bgen $ann;
			addAttr -ln ($bgen+"_"+$k+"_0") -h true -at "float" -parent ($bgen+"_"+$k) $ann;
			addAttr -ln ($bgen+"_"+$k+"_1") -h true -at "float" -parent ($bgen+"_"+$k) $ann;
			addAttr -ln ($bgen+"_"+$k+"_2") -h true -at "float" -parent ($bgen+"_"+$k) $ann;
		}
		for($k=0;$k<$intCC;$k++)
		{
			float $fVal = `getAttr ($ann+"."+$fvstr+"_"+$k+"_0")`;
			setAttr ($ann+"."+$bgen+"_"+$k+"_0") $fVal;
			$fVal = `getAttr ($ann+"."+$fvstr+"_"+$k+"_1")`;
			setAttr ($ann+"."+$bgen+"_"+$k+"_1") $fVal;
			$fVal = `getAttr ($ann+"."+$fvstr+"_"+$k+"_2")`;
			setAttr ($ann+"."+$bgen+"_"+$k+"_2") $fVal;
		}
		deleteAttr ($ann+"."+$fvstr);
		renameAttr ($ann+"."+$bgen) $fvstr;
		for($k=0; $k<$newIntCC; $k++)
		{
			renameAttr ($ann+"."+$bgen+"_"+$k) ($fvstr+"_"+$k);
			renameAttr ($ann+"."+$bgen+"_"+$k+"_0") ($fvstr+"_"+$k+"_0");
			renameAttr ($ann+"."+$bgen+"_"+$k+"_1") ($fvstr+"_"+$k+"_1");
			renameAttr ($ann+"."+$bgen+"_"+$k+"_2") ($fvstr+"_"+$k+"_2");
		}
		setAttr ($ann+"."+$fvstrcc) $newIntCC;
	}
	else if ($ft == "MFColorRGBA")
	{
		addAttr -ln $bgen -nc $newIntCC -h true -at compound $ann;
		for($k=0; $k<$newIntCC; $k++)
		{
			addAttr -ln ($bgen+"_"+$k) -h true -nc 4 -at compound -parent $bgen $ann;
			addAttr -ln ($bgen+"_"+$k+"_0") -h true -at "float" -parent ($bgen+"_"+$k) $ann;
			addAttr -ln ($bgen+"_"+$k+"_1") -h true -at "float" -parent ($bgen+"_"+$k) $ann;
			addAttr -ln ($bgen+"_"+$k+"_2") -h true -at "float" -parent ($bgen+"_"+$k) $ann;
			addAttr -ln ($bgen+"_"+$k+"_3") -h true -at "float" -parent ($bgen+"_"+$k) $ann;
		}
		for($k=0;$k<$intCC;$k++)
		{
			float $fVal = `getAttr ($ann+"."+$fvstr+"_"+$k+"_0")`;
			setAttr ($ann+"."+$bgen+"_"+$k+"_0");
			$fVal = `getAttr ($ann+"."+$fvstr+"_"+$k+"_1")`;
			setAttr ($ann+"."+$bgen+"_"+$k+"_1") $fVal;
			$fVal = `getAttr ($ann+"."+$fvstr+"_"+$k+"_2")`;
			setAttr ($ann+"."+$bgen+"_"+$k+"_2") $fVal;
			$fVal = `getAttr ($ann+"."+$fvstr+"_"+$k+"_3")`;
			setAttr ($ann+"."+$bgen+"_"+$k+"_3") $fVal;
		}
		deleteAttr ($ann+"."+$fvstr);
		renameAttr ($ann+"."+$bgen) $fvstr;
		for($k=0; $k<$newIntCC; $k++)
		{
			renameAttr ($ann+"."+$bgen+"_"+$k) ($fvstr+"_"+$k);
			renameAttr ($ann+"."+$bgen+"_"+$k+"_0") ($fvstr+"_"+$k+"_0");
			renameAttr ($ann+"."+$bgen+"_"+$k+"_1") ($fvstr+"_"+$k+"_1");
			renameAttr ($ann+"."+$bgen+"_"+$k+"_2") ($fvstr+"_"+$k+"_2");
			renameAttr ($ann+"."+$bgen+"_"+$k+"_3") ($fvstr+"_"+$k+"_3");
		}
		setAttr ($ann+"."+$fvstrcc) $newIntCC;
	}
	else if ($ft == "MFDouble")
	{
		addAttr -ln $bgen -nc $newIntCC -h true -at compound $ann;
		for($k=0; $k<$newIntCC; $k++)
		{
			addAttr -ln ($bgen+"_"+$k) -h true -at double -parent $bgen $ann;
		}
		for($k=0;$k<$intCC;$k++)
		{
			string $fvstrnew = $fvstr+"_"+$k;
			float $fVal = `getAttr ($ann+"."+$fvstrnew)`;
			setAttr ($ann+"."+$bgen+"_"+$k) $fVal;
		}
		deleteAttr ($ann+"."+$fvstr);
		renameAttr ($ann+"."+$bgen) $fvstr;
		for($k=0; $k<$newIntCC; $k++)
		{
			renameAttr ($ann+"."+$bgen+"_"+$k) ($fvstr+"_"+$k);
		}
		setAttr ($ann+"."+$fvstrcc) $newIntCC;
	}
	else if ($ft == "MFFloat")
	{
		addAttr -ln $bgen -nc $newIntCC -h true -at compound $ann;
		for($k=0; $k<$newIntCC; $k++)
		{
			addAttr -ln ($bgen+"_"+$k) -h true -at "float" -parent $bgen $ann;
		}
		for($k=0;$k<$intCC;$k++)
		{
			string $fvstrnew = $fvstr+"_"+$k;
			float $fVal = `getAttr ($ann+"."+$fvstrnew)`;
			setAttr ($ann+"."+$bgen+"_"+$k) $fVal;
		}
		deleteAttr ($ann+"."+$fvstr);
		renameAttr ($ann+"."+$bgen) $fvstr;
		for($k=0; $k<$newIntCC; $k++)
		{
			renameAttr ($ann+"."+$bgen+"_"+$k) ($fvstr+"_"+$k);
		}
		setAttr ($ann+"."+$fvstrcc) $newIntCC;
	}
	else if ($ft == "MFImage")
	{
		addAttr -ln $bgen -nc $newIntCC -h true -at compound $ann;
		for($k=0; $k<$newIntCC; $k++)
		{
			addAttr -ln ($bgen+"_"+$k) -h true -dt "string" -parent $bgen $ann;
		}
		for($k=0;$k<$intCC;$k++)
		{
			string $fvstrnew = $fvstr+"_"+$k;
			string $sVal = `getAttr ($ann+"."+$fvstrnew)`;
			setAttr ($ann+"."+$bgen+"_"+$k) -type "string" $sVal;
		}
		deleteAttr ($ann+"."+$fvstr);
		renameAttr ($ann+"."+$bgen) $fvstr;
		for($k=0; $k<$newIntCC; $k++)
		{
			renameAttr ($ann+"."+$bgen+"_"+$k) ($fvstr+"_"+$k);
		}
		setAttr ($ann+"."+$fvstrcc) $newIntCC;
	}
	else if ($ft == "MFInt32")
	{
		addAttr -ln $bgen -nc $newIntCC -h true -at compound $ann;
		for($k=0; $k<$newIntCC; $k++)
		{
			addAttr -ln ($bgen+"_"+$k) -h true -at long -parent $bgen $ann;
		}
		for($k=0;$k<$intCC;$k++)
		{
			string $fvstrnew = $fvstr+"_"+$k;
			int $iVal = `getAttr ($ann+"."+$fvstrnew)`;
			setAttr ($ann+"."+$bgen+"_"+$k) $iVal;
		}
		deleteAttr ($ann+"."+$fvstr);
		renameAttr ($ann+"."+$bgen) $fvstr;
		for($k=0; $k<$newIntCC; $k++)
		{
			renameAttr ($ann+"."+$bgen+"_"+$k) ($fvstr+"_"+$k);
		}
		setAttr ($ann+"."+$fvstrcc) $newIntCC;
	}
	else if ($ft == "MFNode")
	{
		addAttr -ln $bgen -nc $newIntCC -h true -at compound $ann;
		for($k=0; $k<$newIntCC; $k++)
		{
			addAttr -ln ($bgen+"_"+$k) -h true -dt "string" -parent $bgen $ann;
		}
		for($k=0;$k<$intCC;$k++)
		{
			string $fvstrnew = $fvstr+"_"+$k;
			string $sVal = `getAttr ($ann+"."+$fvstrnew)`;
			setAttr ($ann+"."+$bgen+"_"+$k) -type "string" $sVal;
		}
		deleteAttr ($ann+"."+$fvstr);
		renameAttr ($ann+"."+$bgen) $fvstr;
		for($k=0; $k<$newIntCC; $k++)
		{
			renameAttr ($ann+"."+$bgen+"_"+$k) ($fvstr+"_"+$k);
		}
		setAttr ($ann+"."+$fvstrcc) $newIntCC;
	}
	else if ($ft == "MFRotation")
	{
		addAttr -ln $bgen -nc $newIntCC -h true -at compound $ann;
		for($k=0; $k<$newIntCC; $k++)
		{
			addAttr -ln ($bgen+"_"+$k) -h true -at float3 -parent $bgen $ann;
			addAttr -ln ($bgen+"_"+$k+"_0") -h true -at "float" -parent ($bgen+"_"+$k) $ann;
			addAttr -ln ($bgen+"_"+$k+"_1") -h true -at "float" -parent ($bgen+"_"+$k) $ann;
			addAttr -ln ($bgen+"_"+$k+"_2") -h true -at "float" -parent ($bgen+"_"+$k) $ann;
		}
		for($k=0;$k<$intCC;$k++)
		{
			float $fVal = `getAttr ($ann+"."+$fvstr+"_"+$k+"_0")`;
			setAttr ($ann+"."+$bgen+"_"+$k+"_0") $fVal;
			$fVal = `getAttr ($ann+"."+$fvstr+"_"+$k+"_1")`;
			setAttr ($ann+"."+$bgen+"_"+$k+"_1") $fVal;
			$fVal = `getAttr ($ann+"."+$fvstr+"_"+$k+"_2")`;
			setAttr ($ann+"."+$bgen+"_"+$k+"_2") $fVal;
		}
		deleteAttr ($ann+"."+$fvstr);
		renameAttr ($ann+"."+$bgen) $fvstr;
		for($k=0; $k<$newIntCC; $k++)
		{
			renameAttr ($ann+"."+$bgen+"_"+$k) ($fvstr+"_"+$k);
			renameAttr ($ann+"."+$bgen+"_"+$k+"_0") ($fvstr+"_"+$k+"_0");
			renameAttr ($ann+"."+$bgen+"_"+$k+"_1") ($fvstr+"_"+$k+"_1");
			renameAttr ($ann+"."+$bgen+"_"+$k+"_2") ($fvstr+"_"+$k+"_2");
		}
		setAttr ($ann+"."+$fvstrcc) $newIntCC;
	}
	else if ($ft == "MFString")
	{
		addAttr -ln $bgen -nc $newIntCC -h true -at compound $ann;
		for($k=0; $k<$newIntCC; $k++)
		{
			addAttr -ln ($bgen+"_"+$k) -h true -dt "string" -parent $bgen $ann;
		}
		for($k=0;$k<$intCC;$k++)
		{
			string $fvstrnew = $fvstr+"_"+$k;
			string $sVal = `getAttr ($ann+"."+$fvstrnew)`;
			setAttr ($ann+"."+$bgen+"_"+$k) -type "string" $sVal;
		}
		deleteAttr ($ann+"."+$fvstr);
		renameAttr ($ann+"."+$bgen) $fvstr;
		for($k=0; $k<$newIntCC; $k++)
		{
			renameAttr ($ann+"."+$bgen+"_"+$k) ($fvstr+"_"+$k);
		}
		setAttr ($ann+"."+$fvstrcc) $newIntCC;
	}
	else if ($ft == "MFTime")
	{
		addAttr -ln $bgen -nc $newIntCC -h true -at compound $ann;
		for($k=0; $k<$newIntCC; $k++)
		{
			addAttr -ln ($bgen+"_"+$k) -h true -at double -parent $bgen $ann;
		}
		for($k=0;$k<$intCC;$k++)
		{
			string $fvstrnew = $fvstr+"_"+$k;
			float $fVal = `getAttr ($ann+"."+$fvstrnew)`;
			setAttr ($ann+"."+$bgen+"_"+$k) $fVal;
		}
		deleteAttr ($ann+"."+$fvstr);
		renameAttr ($ann+"."+$bgen) $fvstr;
		for($k=0; $k<$newIntCC; $k++)
		{
			renameAttr ($ann+"."+$bgen+"_"+$k) ($fvstr+"_"+$k);
		}
		setAttr ($ann+"."+$fvstrcc) $newIntCC;
	}
	else if ($ft == "MFVec2d")
	{
		addAttr -ln $bgen -nc $newIntCC -h true -at compound $ann;
		for($k=0; $k<$newIntCC; $k++)
		{
			addAttr -ln ($bgen+"_"+$k) -h true -at double2 -parent $bgen $ann;
			addAttr -ln ($bgen+"_"+$k+"_0") -h true -at double -parent ($bgen+"_"+$k) $ann;
			addAttr -ln ($bgen+"_"+$k+"_1") -h true -at double -parent ($bgen+"_"+$k) $ann;
		}
		for($k=0;$k<$intCC;$k++)
		{
			float $fVal = `getAttr ($ann+"."+$fvstr+"_"+$k+"_0")`;
			setAttr ($ann+"."+$bgen+"_"+$k+"_0") $fVal;
			$fVal = `getAttr ($ann+"."+$fvstr+"_"+$k+"_1")`;
			setAttr ($ann+"."+$bgen+"_"+$k+"_1") $fVal;
		}
		deleteAttr ($ann+"."+$fvstr);
		renameAttr ($ann+"."+$bgen) $fvstr;
		for($k=0; $k<$newIntCC; $k++)
		{
			renameAttr ($ann+"."+$bgen+"_"+$k) ($fvstr+"_"+$k);
			renameAttr ($ann+"."+$bgen+"_"+$k+"_0") ($fvstr+"_"+$k+"_0");
			renameAttr ($ann+"."+$bgen+"_"+$k+"_1") ($fvstr+"_"+$k+"_1");
		}
		setAttr ($ann+"."+$fvstrcc) $newIntCC;
	}
	else if ($ft == "MFVec2f")
	{
		addAttr -ln $bgen -nc $newIntCC -h true -at compound $ann;
		for($k=0; $k<$newIntCC; $k++)
		{
			addAttr -ln ($bgen+"_"+$k) -h true -at float2 -parent $bgen $ann;
			addAttr -ln ($bgen+"_"+$k+"_0") -h true -at "float" -parent ($bgen+"_"+$k) $ann;
			addAttr -ln ($bgen+"_"+$k+"_1") -h true -at "float" -parent ($bgen+"_"+$k) $ann;
		}
		for($k=0;$k<$intCC;$k++)
		{
			float $fVal = `getAttr ($ann+"."+$fvstr+"_"+$k+"_0")`;
			setAttr ($ann+"."+$bgen+"_"+$k+"_0") $fVal;
			$fVal = `getAttr ($ann+"."+$fvstr+"_"+$k+"_1")`;
			setAttr ($ann+"."+$bgen+"_"+$k+"_1") $fVal;
		}
		deleteAttr ($ann+"."+$fvstr);
		renameAttr ($ann+"."+$bgen) $fvstr;
		for($k=0; $k<$newIntCC; $k++)
		{
			renameAttr ($ann+"."+$bgen+"_"+$k) ($fvstr+"_"+$k);
			renameAttr ($ann+"."+$bgen+"_"+$k+"_0") ($fvstr+"_"+$k+"_0");
			renameAttr ($ann+"."+$bgen+"_"+$k+"_1") ($fvstr+"_"+$k+"_1");
		}
		setAttr ($ann+"."+$fvstrcc) $newIntCC;
	}
	else if ($ft == "MFVec3d")
	{
		addAttr -ln $bgen -nc $newIntCC -h true -at compound $ann;
		for($k=0; $k<$newIntCC; $k++)
		{
			addAttr -ln ($bgen+"_"+$k) -h true -at double3 -parent $bgen $ann;
			addAttr -ln ($bgen+"_"+$k+"_0") -h true -at double -parent ($bgen+"_"+$k) $ann;
			addAttr -ln ($bgen+"_"+$k+"_1") -h true -at double -parent ($bgen+"_"+$k) $ann;
			addAttr -ln ($bgen+"_"+$k+"_2") -h true -at double -parent ($bgen+"_"+$k) $ann;
		}
		for($k=0;$k<$intCC;$k++)
		{
			float $fVal = `getAttr ($ann+"."+$fvstr+"_"+$k+"_0")`;
			setAttr ($ann+"."+$bgen+"_"+$k+"_0") $fVal;
			$fVal = `getAttr ($ann+"."+$fvstr+"_"+$k+"_1")`;
			setAttr ($ann+"."+$bgen+"_"+$k+"_1") $fVal;
			$fVal = `getAttr ($ann+"."+$fvstr+"_"+$k+"_2")`;
			setAttr ($ann+"."+$bgen+"_"+$k+"_2") $fVal;
		}
		deleteAttr ($ann+"."+$fvstr);
		renameAttr ($ann+"."+$bgen) $fvstr;
		for($k=0; $k<$newIntCC; $k++)
		{
			renameAttr ($ann+"."+$bgen+"_"+$k) ($fvstr+"_"+$k);
			renameAttr ($ann+"."+$bgen+"_"+$k+"_0") ($fvstr+"_"+$k+"_0");
			renameAttr ($ann+"."+$bgen+"_"+$k+"_1") ($fvstr+"_"+$k+"_1");
			renameAttr ($ann+"."+$bgen+"_"+$k+"_2") ($fvstr+"_"+$k+"_2");
		}
		setAttr ($ann+"."+$fvstrcc) $newIntCC;
	}
	else if ($ft == "MFVec3f")
	{
		addAttr -ln $bgen -nc $newIntCC -h true -at compound $ann;
		for($k=0; $k<$newIntCC; $k++)
		{
			addAttr -ln ($bgen+"_"+$k) -h true -at float3 -parent $bgen $ann;
			addAttr -ln ($bgen+"_"+$k+"_0") -h true -at "float" -parent ($bgen+"_"+$k) $ann;
			addAttr -ln ($bgen+"_"+$k+"_1") -h true -at "float" -parent ($bgen+"_"+$k) $ann;
			addAttr -ln ($bgen+"_"+$k+"_2") -h true -at "float" -parent ($bgen+"_"+$k) $ann;
		}
		for($k=0;$k<$intCC;$k++)
		{
			float $fVal = `getAttr ($ann+"."+$fvstr+"_"+$k+"_0")`;
			setAttr ($ann+"."+$bgen+"_"+$k+"_0") $fVal;
			$fVal = `getAttr ($ann+"."+$fvstr+"_"+$k+"_1")`;
			setAttr ($ann+"."+$bgen+"_"+$k+"_1") $fVal;
			$fVal = `getAttr ($ann+"."+$fvstr+"_"+$k+"_2")`;
			setAttr ($ann+"."+$bgen+"_"+$k+"_2") $fVal;
		}
		deleteAttr ($ann+"."+$fvstr);
		renameAttr ($ann+"."+$bgen) $fvstr;
		for($k=0; $k<$newIntCC; $k++)
		{
			renameAttr ($ann+"."+$bgen+"_"+$k) ($fvstr+"_"+$k);
			renameAttr ($ann+"."+$bgen+"_"+$k+"_0") ($fvstr+"_"+$k+"_0");
			renameAttr ($ann+"."+$bgen+"_"+$k+"_1") ($fvstr+"_"+$k+"_1");
			renameAttr ($ann+"."+$bgen+"_"+$k+"_2") ($fvstr+"_"+$k+"_2");
		}
		setAttr ($ann+"."+$fvstrcc) $newIntCC;
	}

	window -e -vis false $feWindow;
	openX3DScriptFieldEditWindow($ann, $i);
}

global proc removeX3DSubFields(string $ann, string $fName, string $ft, string $sIndex, string $fIndex, string $feWindow)
{
	string $fvstr = "x3d_"+$fName;
	string $fvstrcc = $fvstr+"_cc";
	int $intCC = `getAttr ($ann+"."+$fvstrcc)`;
	int $i = (int)$fIndex;
	int $l = (int)$sIndex;
	int $bc = `getAttr ($ann+".x3dbc")`;
	string $bgen = "x3d_gen_bc_"+$bc;
	int $newIntCC = $intCC-1;
	int $k;

	if ($ft == "MFBool")
	{
		addAttr -ln $bgen -nc $newIntCC -h true -at compound $ann;
		for($k=0; $k<$newIntCC; $k++)
		{
			addAttr -ln ($bgen+"_"+$k) -h true -at bool -parent $bgen $ann;
		}
		int $m=0;
		for($k=0;$k<$intCC;$k++)
		{
			if($k!=$l)
			{
				string $fvstrnew = $fvstr+"_"+$k;
				int $iVal = `getAttr ($ann+"."+$fvstrnew)`;
				setAttr ($ann+"."+$bgen+"_"+$m) $iVal;
				$m = $m+1;
			}
		}
		deleteAttr ($ann+"."+$fvstr);
		renameAttr ($ann+"."+$bgen) $fvstr;
		for($k=0; $k<$newIntCC; $k++)
		{
			renameAttr ($ann+"."+$bgen+"_"+$k) ($fvstr+"_"+$k);
		}
		setAttr ($ann+"."+$fvstrcc) $newIntCC;
	}
	else if ($ft == "MFColor")
	{
		addAttr -ln $bgen -nc $newIntCC -h true -at compound $ann;
		for($k=0; $k<$newIntCC; $k++)
		{
			addAttr -ln ($bgen+"_"+$k) -h true -at float3 -parent $bgen $ann;
			addAttr -ln ($bgen+"_"+$k+"_0") -h true -at "float" -parent ($bgen+"_"+$k) $ann;
			addAttr -ln ($bgen+"_"+$k+"_1") -h true -at "float" -parent ($bgen+"_"+$k) $ann;
			addAttr -ln ($bgen+"_"+$k+"_2") -h true -at "float" -parent ($bgen+"_"+$k) $ann;
		}
		
		int $m=0;
		for($k=0;$k<$intCC;$k++)
		{
			if($k !=$l)
			{
				float $fVal = `getAttr ($ann+"."+$fvstr+"_"+$k+"_0")`;
				setAttr ($ann+"."+$bgen+"_"+$m+"_0") $fVal;
				$fVal = `getAttr ($ann+"."+$fvstr+"_"+$k+"_1")`;
				setAttr ($ann+"."+$bgen+"_"+$m+"_1") $fVal;
				$fVal = `getAttr ($ann+"."+$fvstr+"_"+$k+"_2")`;
				setAttr ($ann+"."+$bgen+"_"+$m+"_2") $fVal;
				$m = $m+1;
			}
		}
		deleteAttr ($ann+"."+$fvstr);
		renameAttr ($ann+"."+$bgen) $fvstr;
		for($k=0; $k<$newIntCC; $k++)
		{
			renameAttr ($ann+"."+$bgen+"_"+$k) ($fvstr+"_"+$k);
			renameAttr ($ann+"."+$bgen+"_"+$k+"_0") ($fvstr+"_"+$k+"_0");
			renameAttr ($ann+"."+$bgen+"_"+$k+"_1") ($fvstr+"_"+$k+"_1");
			renameAttr ($ann+"."+$bgen+"_"+$k+"_2") ($fvstr+"_"+$k+"_2");
		}
		setAttr ($ann+"."+$fvstrcc) $newIntCC;
	}
	else if ($ft == "MFColorRGBA")
	{
		addAttr -ln $bgen -nc $newIntCC -h true -at compound $ann;
		for($k=0; $k<$newIntCC; $k++)
		{
			addAttr -ln ($bgen+"_"+$k) -h true -nc 4 -at compound -parent $bgen $ann;
			addAttr -ln ($bgen+"_"+$k+"_0") -h true -at "float" -parent ($bgen+"_"+$k) $ann;
			addAttr -ln ($bgen+"_"+$k+"_1") -h true -at "float" -parent ($bgen+"_"+$k) $ann;
			addAttr -ln ($bgen+"_"+$k+"_2") -h true -at "float" -parent ($bgen+"_"+$k) $ann;
			addAttr -ln ($bgen+"_"+$k+"_3") -h true -at "float" -parent ($bgen+"_"+$k) $ann;
		}
		int $m=0;
		for($k=0;$k<$intCC;$k++)
		{
			if($k!=$l)
			{
				float $fVal = `getAttr ($ann+"."+$fvstr+"_"+$k+"_0")`;
				setAttr ($ann+"."+$bgen+"_"+$m+"_0");
				$fVal = `getAttr ($ann+"."+$fvstr+"_"+$k+"_1")`;
				setAttr ($ann+"."+$bgen+"_"+$m+"_1") $fVal;
				$fVal = `getAttr ($ann+"."+$fvstr+"_"+$k+"_2")`;
				setAttr ($ann+"."+$bgen+"_"+$m+"_2") $fVal;
				$fVal = `getAttr ($ann+"."+$fvstr+"_"+$k+"_3")`;
				setAttr ($ann+"."+$bgen+"_"+$m+"_3") $fVal;
				$m = $m+1;
			}
		}
		deleteAttr ($ann+"."+$fvstr);
		renameAttr ($ann+"."+$bgen) $fvstr;
		for($k=0; $k<$newIntCC; $k++)
		{
			renameAttr ($ann+"."+$bgen+"_"+$k) ($fvstr+"_"+$k);
			renameAttr ($ann+"."+$bgen+"_"+$k+"_0") ($fvstr+"_"+$k+"_0");
			renameAttr ($ann+"."+$bgen+"_"+$k+"_1") ($fvstr+"_"+$k+"_1");
			renameAttr ($ann+"."+$bgen+"_"+$k+"_2") ($fvstr+"_"+$k+"_2");
			renameAttr ($ann+"."+$bgen+"_"+$k+"_3") ($fvstr+"_"+$k+"_3");
		}
		setAttr ($ann+"."+$fvstrcc) $newIntCC;
	}
	else if ($ft == "MFDouble")
	{
		addAttr -ln $bgen -nc $newIntCC -h true -at compound $ann;
		for($k=0; $k<$newIntCC; $k++)
		{
			addAttr -ln ($bgen+"_"+$k) -h true -at double -parent $bgen $ann;
		}
		int $m=0;
		for($k=0;$k<$intCC;$k++)
		{
			if($k!=$l)
			{
				string $fvstrnew = $fvstr+"_"+$k;
				float $fVal = `getAttr ($ann+"."+$fvstrnew)`;
				setAttr ($ann+"."+$bgen+"_"+$m) $fVal;
				$m = $m+1;
			}
		}
		deleteAttr ($ann+"."+$fvstr);
		renameAttr ($ann+"."+$bgen) $fvstr;
		for($k=0; $k<$newIntCC; $k++)
		{
			renameAttr ($ann+"."+$bgen+"_"+$k) ($fvstr+"_"+$k);
		}
		setAttr ($ann+"."+$fvstrcc) $newIntCC;
	}
	else if ($ft == "MFFloat")
	{
		addAttr -ln $bgen -nc $newIntCC -h true -at compound $ann;
		for($k=0; $k<$newIntCC; $k++)
		{
			addAttr -ln ($bgen+"_"+$k) -h true -at "float" -parent $bgen $ann;
		}
		int $m=0;
		for($k=0;$k<$intCC;$k++)
		{
			if($k!=$l)
			{
				string $fvstrnew = $fvstr+"_"+$k;
				float $fVal = `getAttr ($ann+"."+$fvstrnew)`;
				setAttr ($ann+"."+$bgen+"_"+$m) $fVal;
				$m = $m+1;
			}
		}
		deleteAttr ($ann+"."+$fvstr);
		renameAttr ($ann+"."+$bgen) $fvstr;
		for($k=0; $k<$newIntCC; $k++)
		{
			renameAttr ($ann+"."+$bgen+"_"+$k) ($fvstr+"_"+$k);
		}
		setAttr ($ann+"."+$fvstrcc) $newIntCC;
	}
	else if ($ft == "MFImage")
	{
		addAttr -ln $bgen -nc $newIntCC -h true -at compound $ann;
		for($k=0; $k<$newIntCC; $k++)
		{
			addAttr -ln ($bgen+"_"+$k) -h true -dt "string" -parent $bgen $ann;
		}
		int $m=0;
		for($k=0;$k<$intCC;$k++)
		{
			if($k!=$l)
			{
				string $fvstrnew = $fvstr+"_"+$k;
				string $sVal = `getAttr ($ann+"."+$fvstrnew)`;
				setAttr ($ann+"."+$bgen+"_"+$m) -type "string" $sVal;
				$m = $m+1;
			}
		}
		deleteAttr ($ann+"."+$fvstr);
		renameAttr ($ann+"."+$bgen) $fvstr;
		for($k=0; $k<$newIntCC; $k++)
		{
			renameAttr ($ann+"."+$bgen+"_"+$k) ($fvstr+"_"+$k);
		}
		setAttr ($ann+"."+$fvstrcc) $newIntCC;
	}
	else if ($ft == "MFInt32")
	{
		addAttr -ln $bgen -nc $newIntCC -h true -at compound $ann;
		for($k=0; $k<$newIntCC; $k++)
		{
			addAttr -ln ($bgen+"_"+$k) -h true -at long -parent $bgen $ann;
		}
		int $m=0;
		for($k=0;$k<$intCC;$k++)
		{
			if($k!=$l)
			{
				string $fvstrnew = $fvstr+"_"+$k;
				int $iVal = `getAttr ($ann+"."+$fvstrnew)`;
				setAttr ($ann+"."+$bgen+"_"+$m) $iVal;
				$m = $m+1;
			}
		}
		deleteAttr ($ann+"."+$fvstr);
		renameAttr ($ann+"."+$bgen) $fvstr;
		for($k=0; $k<$newIntCC; $k++)
		{
			renameAttr ($ann+"."+$bgen+"_"+$k) ($fvstr+"_"+$k);
		}
		setAttr ($ann+"."+$fvstrcc) $newIntCC;
	}
	else if ($ft == "MFNode")
	{
		addAttr -ln $bgen -nc $newIntCC -h true -at compound $ann;
		for($k=0; $k<$newIntCC; $k++)
		{
			addAttr -ln ($bgen+"_"+$k) -h true -dt "string" -parent $bgen $ann;
		}
		int $m=0;
		for($k=0;$k<$intCC;$k++)
		{
			if($k!=$l)
			{
				string $fvstrnew = $fvstr+"_"+$k;
				string $sVal = `getAttr ($ann+"."+$fvstrnew)`;
				setAttr ($ann+"."+$bgen+"_"+$m) -type "string" $sVal;
				$m = $m+1;
			}
		}
		deleteAttr ($ann+"."+$fvstr);
		renameAttr ($ann+"."+$bgen) $fvstr;
		for($k=0; $k<$newIntCC; $k++)
		{
			renameAttr ($ann+"."+$bgen+"_"+$k) ($fvstr+"_"+$k);
		}
		setAttr ($ann+"."+$fvstrcc) $newIntCC;
	}
	else if ($ft == "MFRotation")
	{
		addAttr -ln $bgen -nc $newIntCC -h true -at compound $ann;
		for($k=0; $k<$newIntCC; $k++)
		{
			addAttr -ln ($bgen+"_"+$k) -h true -at float3 -parent $bgen $ann;
			addAttr -ln ($bgen+"_"+$k+"_0") -h true -at "float" -parent ($bgen+"_"+$k) $ann;
			addAttr -ln ($bgen+"_"+$k+"_1") -h true -at "float" -parent ($bgen+"_"+$k) $ann;
			addAttr -ln ($bgen+"_"+$k+"_2") -h true -at "float" -parent ($bgen+"_"+$k) $ann;
		}
		int $m=0;
		for($k=0;$k<$intCC;$k++)
		{
			if($k!=$l)
			{
				float $fVal = `getAttr ($ann+"."+$fvstr+"_"+$k+"_0")`;
				setAttr ($ann+"."+$bgen+"_"+$m+"_0") $fVal;
				$fVal = `getAttr ($ann+"."+$fvstr+"_"+$k+"_1")`;
				setAttr ($ann+"."+$bgen+"_"+$m+"_1") $fVal;
				$fVal = `getAttr ($ann+"."+$fvstr+"_"+$k+"_2")`;
				setAttr ($ann+"."+$bgen+"_"+$m+"_2") $fVal;
				$m = $m+1;
			}
		}
		deleteAttr ($ann+"."+$fvstr);
		renameAttr ($ann+"."+$bgen) $fvstr;
		for($k=0; $k<$newIntCC; $k++)
		{
			renameAttr ($ann+"."+$bgen+"_"+$k) ($fvstr+"_"+$k);
			renameAttr ($ann+"."+$bgen+"_"+$k+"_0") ($fvstr+"_"+$k+"_0");
			renameAttr ($ann+"."+$bgen+"_"+$k+"_1") ($fvstr+"_"+$k+"_1");
			renameAttr ($ann+"."+$bgen+"_"+$k+"_2") ($fvstr+"_"+$k+"_2");
		}
		setAttr ($ann+"."+$fvstrcc) $newIntCC;
	}
	else if ($ft == "MFString")
	{
		addAttr -ln $bgen -nc $newIntCC -h true -at compound $ann;
		for($k=0; $k<$newIntCC; $k++)
		{
			addAttr -ln ($bgen+"_"+$k) -h true -dt "string" -parent $bgen $ann;
		}
		int $m=0;
		for($k=0;$k<$intCC;$k++)
		{
			if($k!=$l)
			{
				string $fvstrnew = $fvstr+"_"+$k;
				string $sVal = `getAttr ($ann+"."+$fvstrnew)`;
				setAttr ($ann+"."+$bgen+"_"+$m) -type "string" $sVal;
				$m = $m+1;
			}
		}
		deleteAttr ($ann+"."+$fvstr);
		renameAttr ($ann+"."+$bgen) $fvstr;
		for($k=0; $k<$newIntCC; $k++)
		{
			renameAttr ($ann+"."+$bgen+"_"+$k) ($fvstr+"_"+$k);
		}
		setAttr ($ann+"."+$fvstrcc) $newIntCC;
	}
	else if ($ft == "MFTime")
	{
		addAttr -ln $bgen -nc $newIntCC -h true -at compound $ann;
		for($k=0; $k<$newIntCC; $k++)
		{
			addAttr -ln ($bgen+"_"+$k) -h true -at double -parent $bgen $ann;
		}
		int $m=0;
		for($k=0;$k<$intCC;$k++)
		{
			if($k!=$l)
			{
				string $fvstrnew = $fvstr+"_"+$k;
				float $fVal = `getAttr ($ann+"."+$fvstrnew)`;
				setAttr ($ann+"."+$bgen+"_"+$m) $fVal;
				$m = $m+1;
			}
		}
		deleteAttr ($ann+"."+$fvstr);
		renameAttr ($ann+"."+$bgen) $fvstr;
		for($k=0; $k<$newIntCC; $k++)
		{
			renameAttr ($ann+"."+$bgen+"_"+$k) ($fvstr+"_"+$k);
		}
		setAttr ($ann+"."+$fvstrcc) $newIntCC;
	}
	else if ($ft == "MFVec2d")
	{
		addAttr -ln $bgen -nc $newIntCC -h true -at compound $ann;
		for($k=0; $k<$newIntCC; $k++)
		{
			addAttr -ln ($bgen+"_"+$k) -h true -at double2 -parent $bgen $ann;
			addAttr -ln ($bgen+"_"+$k+"_0") -h true -at double -parent ($bgen+"_"+$k) $ann;
			addAttr -ln ($bgen+"_"+$k+"_1") -h true -at double -parent ($bgen+"_"+$k) $ann;
		}
		int $m=0;
		for($k=0;$k<$intCC;$k++)
		{
			if($k!=$l)
			{
				float $fVal = `getAttr ($ann+"."+$fvstr+"_"+$k+"_0")`;
				setAttr ($ann+"."+$bgen+"_"+$m+"_0") $fVal;
				$fVal = `getAttr ($ann+"."+$fvstr+"_"+$k+"_1")`;
				setAttr ($ann+"."+$bgen+"_"+$m+"_1") $fVal;
				$m = $m+1;
			}
		}
		deleteAttr ($ann+"."+$fvstr);
		renameAttr ($ann+"."+$bgen) $fvstr;
		for($k=0; $k<$newIntCC; $k++)
		{
			renameAttr ($ann+"."+$bgen+"_"+$k) ($fvstr+"_"+$k);
			renameAttr ($ann+"."+$bgen+"_"+$k+"_0") ($fvstr+"_"+$k+"_0");
			renameAttr ($ann+"."+$bgen+"_"+$k+"_1") ($fvstr+"_"+$k+"_1");
		}
		setAttr ($ann+"."+$fvstrcc) $newIntCC;
	}
	else if ($ft == "MFVec2f")
	{
		addAttr -ln $bgen -nc $newIntCC -h true -at compound $ann;
		for($k=0; $k<$newIntCC; $k++)
		{
			addAttr -ln ($bgen+"_"+$k) -h true -at float2 -parent $bgen $ann;
			addAttr -ln ($bgen+"_"+$k+"_0") -h true -at "float" -parent ($bgen+"_"+$k) $ann;
			addAttr -ln ($bgen+"_"+$k+"_1") -h true -at "float" -parent ($bgen+"_"+$k) $ann;
		}
		int $m=0;
		for($k=0;$k<$intCC;$k++)
		{
			if($k!=$l)
			{
				float $fVal = `getAttr ($ann+"."+$fvstr+"_"+$k+"_0")`;
				setAttr ($ann+"."+$bgen+"_"+$m+"_0") $fVal;
				$fVal = `getAttr ($ann+"."+$fvstr+"_"+$k+"_1")`;
				setAttr ($ann+"."+$bgen+"_"+$m+"_1") $fVal;
				$m = $m+1;
			}
		}
		deleteAttr ($ann+"."+$fvstr);
		renameAttr ($ann+"."+$bgen) $fvstr;
		for($k=0; $k<$newIntCC; $k++)
		{
			renameAttr ($ann+"."+$bgen+"_"+$k) ($fvstr+"_"+$k);
			renameAttr ($ann+"."+$bgen+"_"+$k+"_0") ($fvstr+"_"+$k+"_0");
			renameAttr ($ann+"."+$bgen+"_"+$k+"_1") ($fvstr+"_"+$k+"_1");
		}
		setAttr ($ann+"."+$fvstrcc) $newIntCC;
	}
	else if ($ft == "MFVec3d")
	{
		addAttr -ln $bgen -nc $newIntCC -h true -at compound $ann;
		for($k=0; $k<$newIntCC; $k++)
		{
			addAttr -ln ($bgen+"_"+$k) -h true -at double3 -parent $bgen $ann;
			addAttr -ln ($bgen+"_"+$k+"_0") -h true -at double -parent ($bgen+"_"+$k) $ann;
			addAttr -ln ($bgen+"_"+$k+"_1") -h true -at double -parent ($bgen+"_"+$k) $ann;
			addAttr -ln ($bgen+"_"+$k+"_2") -h true -at double -parent ($bgen+"_"+$k) $ann;
		}
		int $m=0;
		for($k=0;$k<$intCC;$k++)
		{
			if($k!=$l)
			{
				float $fVal = `getAttr ($ann+"."+$fvstr+"_"+$k+"_0")`;
				setAttr ($ann+"."+$bgen+"_"+$m+"_0") $fVal;
				$fVal = `getAttr ($ann+"."+$fvstr+"_"+$k+"_1")`;
				setAttr ($ann+"."+$bgen+"_"+$m+"_1") $fVal;
				$fVal = `getAttr ($ann+"."+$fvstr+"_"+$k+"_2")`;
				setAttr ($ann+"."+$bgen+"_"+$m+"_2") $fVal;
				$m = $m+1;
			}
		}
		deleteAttr ($ann+"."+$fvstr);
		renameAttr ($ann+"."+$bgen) $fvstr;
		for($k=0; $k<$newIntCC; $k++)
		{
			renameAttr ($ann+"."+$bgen+"_"+$k) ($fvstr+"_"+$k);
			renameAttr ($ann+"."+$bgen+"_"+$k+"_0") ($fvstr+"_"+$k+"_0");
			renameAttr ($ann+"."+$bgen+"_"+$k+"_1") ($fvstr+"_"+$k+"_1");
			renameAttr ($ann+"."+$bgen+"_"+$k+"_2") ($fvstr+"_"+$k+"_2");
		}
		setAttr ($ann+"."+$fvstrcc) $newIntCC;
	}
	else if ($ft == "MFVec3f")
	{
		addAttr -ln $bgen -nc $newIntCC -h true -at compound $ann;
		for($k=0; $k<$newIntCC; $k++)
		{
			addAttr -ln ($bgen+"_"+$k) -h true -at float3 -parent $bgen $ann;
			addAttr -ln ($bgen+"_"+$k+"_0") -h true -at "float" -parent ($bgen+"_"+$k) $ann;
			addAttr -ln ($bgen+"_"+$k+"_1") -h true -at "float" -parent ($bgen+"_"+$k) $ann;
			addAttr -ln ($bgen+"_"+$k+"_2") -h true -at "float" -parent ($bgen+"_"+$k) $ann;
		}
		int $m=0;
		for($k=0;$k<$intCC;$k++)
		{
			if($k!=$l)
			{
				float $fVal = `getAttr ($ann+"."+$fvstr+"_"+$k+"_0")`;
				setAttr ($ann+"."+$bgen+"_"+$m+"_0") $fVal;
				$fVal = `getAttr ($ann+"."+$fvstr+"_"+$k+"_1")`;
				setAttr ($ann+"."+$bgen+"_"+$m+"_1") $fVal;
				$fVal = `getAttr ($ann+"."+$fvstr+"_"+$k+"_2")`;
				setAttr ($ann+"."+$bgen+"_"+$m+"_2") $fVal;
				$m = $m+1;
			}
		}
		deleteAttr ($ann+"."+$fvstr);
		renameAttr ($ann+"."+$bgen) $fvstr;
		for($k=0; $k<$newIntCC; $k++)
		{
			renameAttr ($ann+"."+$bgen+"_"+$k) ($fvstr+"_"+$k);
			renameAttr ($ann+"."+$bgen+"_"+$k+"_0") ($fvstr+"_"+$k+"_0");
			renameAttr ($ann+"."+$bgen+"_"+$k+"_1") ($fvstr+"_"+$k+"_1");
			renameAttr ($ann+"."+$bgen+"_"+$k+"_2") ($fvstr+"_"+$k+"_2");
		}
		setAttr ($ann+"."+$fvstrcc) $newIntCC;
	}

	window -e -vis false $feWindow;
	openX3DScriptFieldEditWindow($ann, $i);}

global proc openX3DScriptFieldEditWindow(string $nodeName, int $i)
{
	string $fName = `getAttr ($nodeName+".fieldName["+$i+"]")`;
	string $ft = `getAttr ($nodeName+".fieldType["+$i+"]")`;
	string $divider[];
	tokenize($ft,"F", $divider);
	string $feWindow = `window -tlb true -title ($nodeName+": "+$fName+" ["+$ft+"]") -w 350 -h 250`;
	scrollLayout scrLayout;
		columnLayout colLayout;
			rowLayout;
				text -l "     " -h 10 -fn "smallBoldLabelFont" -al "left";
			setParent ..;		   
		if($divider[0] == "M")
		{
			string $attrCC = "x3d_"+$fName+"_cc";
			int $intCC = `getAttr ($nodeName+"."+$attrCC)`;
			rowLayout -nc 4 -cw4 10 140 140 10;
				text -l "     " -h 25 -w 10 -fn "smallBoldLabelFont" -al "left";
				text -l ("Values for: "+$fName) -h 25 -w 100 -fn "smallBoldLabelFont" -al "left";
				button -l "Append New Value" -c ("appendToX3DMFField "+$nodeName+" "+$fName+" "+$ft+" "+$feWindow+" "+$i);
				text -l "     " -h 25 -w 10 -fn "smallBoldLabelFont" -al "left";
			setParent ..;
			rowLayout;
				text -l "     " -h 10 -fn "smallBoldLabelFont" -al "left";
			setParent ..;
				if ($ft == "MFBool")
				{
					string $attrName = "x3d_"+$fName;
					int $j;
					for($j=0;$j<$intCC;$j++)
					{
						string $attrNameNum = $attrName+"_"+$j;
						if($intCC > 1) rowLayout -nc 5 -cw5 10 60 70 50 10;
						else rowLayout -nc 4 -cw4 10 50 50 10;
							text -l "     " -h 25 -al "left";
							string $collection1 = `radioCollection`;
					    	string $rb1, $rb2;
					    	$rb1 = `radioButton -label "TRUE" -onc ("setFieldValue "+$nodeName+" "+$attrNameNum+" "+$ft+" 1")`;
				    		$rb2 = `radioButton -label "FALSE" -onc ("setFieldValue "+$nodeName+" "+$attrNameNum+" "+$ft+" 0")`;
							if($intCC > 1) button -h 25 -l "Remove" -c ("removeX3DSubFields "+$nodeName+" "+$fName+" "+$ft+" "+$j+" "+$i+" "+$feWindow);
							text -l "     " -h 25 -al "left";
			    		setParent ..;
						int $bool1 = `getAttr ($nodeName+"."+$attrNameNum)`;
						if($bool1==0) radioCollection -e -select $rb2 $collection1;
						else radioCollection -e -select $rb1 $collection1;
					}
				}
				else if ($ft == "MFColor")
				{
					string $attrName = "x3d_"+$fName;
					int $j;
					for($j=0;$j<$intCC;$j++)
					{
						string $attrNameNum = $attrName+"_"+$j;
						if($intCC > 1) rowLayout -nc 6 -cw6 10 60 60 60 60 10;
						else rowLayout -nc 5 -cw5 10 70 70 70 10;
							text -l "     " -w 10 -h 25 -al "left";
							floatField -w 60 -h 25  -cc ("setCompileThreeM "+$nodeName+" "+$attrNameNum+" "+$ft+" "+$j) ("float1"+$j);
							floatField -w 60 -h 25  -cc ("setCompileThreeM "+$nodeName+" "+$attrNameNum+" "+$ft+" "+$j) ("float2"+$j);
							floatField -w 60 -h 25  -cc ("setCompileThreeM "+$nodeName+" "+$attrNameNum+" "+$ft+" "+$j) ("float3"+$j);
							if($intCC > 1) button -h 25 -l "Remove" -c ("removeX3DSubFields "+$nodeName+" "+$fName+" "+$ft+" "+$j+" "+$i+" "+$feWindow);
							text -l "     " -w 10 -h 25 -al "left";
				    	setParent ..;
						float $fValues[] = `getAttr ($nodeName+"."+$attrNameNum)`;
						floatField -e -v $fValues[0] ("float1"+$j);
						floatField -e -v $fValues[1] ("float2"+$j);
						floatField -e -v $fValues[2] ("float3"+$j);
					}
				}
				else if ($ft == "MFColorRGBA")
				{
					string $attrName = "x3d_"+$fName;
					int $j;
					for($j=0;$j<$intCC;$j++)
					{
						string $attrNameNum = $attrName+"_"+$j;
						rowLayout -nc 6 -cw6 10 60 60 60 60 50;
							text -l "     " -w 10 -h 25 -al "left";
							floatField -w 60 -h 25  -cc ("setCompileFourM "+$nodeName+" "+$attrNameNum+" "+$ft+" "+$j) ("float1"+$j);
							floatField -w 60 -h 25  -cc ("setCompileFourM "+$nodeName+" "+$attrNameNum+" "+$ft+" "+$j) ("float2"+$j);
							floatField -w 60 -h 25  -cc ("setCompileFourM "+$nodeName+" "+$attrNameNum+" "+$ft+" "+$j) ("float3"+$j);
							floatField -w 60 -h 25  -cc ("setCompileFourM "+$nodeName+" "+$attrNameNum+" "+$ft+" "+$j) ("float4"+$j);
							if($intCC > 1) button -h 25 -l "Remove" -c ("removeX3DSubFields "+$nodeName+" "+$fName+" "+$ft+" "+$j+" "+$i+" "+$feWindow);
							else text -l "     " -w 10 -h 25 -al "left";
				    	setParent ..;
						float $fValues[] = `getAttr ($nodeName+"."+$attrNameNum)`;
						floatField -e -v $fValues[0] ("float1"+$j);
						floatField -e -v $fValues[1] ("float2"+$j);
						floatField -e -v $fValues[2] ("float3"+$j);
						floatField -e -v $fValues[2] ("float4"+$j);
					}
				}
				else if ($ft == "MFDouble")
				{
					string $attrName = "x3d_"+$fName;
					int $j;
					for($j=0;$j<$intCC;$j++)
					{
						string $attrNameNum = $attrName+"_"+$j;
						if($intCC > 1) rowLayout -nc 4 -cw4 10 70 60 10;
						else rowLayout -nc 3 -cw3 10 70 10;
							text -l "     " -w 10 -h 25 -al "left";
							floatField -w 60 -h 25  -cc ("setCompileOneM "+$nodeName+" "+$attrNameNum+" "+$ft+" "+$j) ("float1"+$j);
							if($intCC > 1) button -h 25 -l "Remove" -c ("removeX3DSubFields "+$nodeName+" "+$fName+" "+$ft+" "+$j+" "+$i+" "+$feWindow);
							text -l "     " -w 10 -h 25 -al "left";
					    setParent ..;
						float $fValues = `getAttr ($nodeName+"."+$attrNameNum)`;
						floatField -e -v $fValues ("float1"+$j);
					}
				}
				else if ($ft == "MFFloat")
				{
					string $attrName = "x3d_"+$fName;
					int $j;
					for($j=0;$j<$intCC;$j++)
					{
						string $attrNameNum = $attrName+"_"+$j;
						if($intCC > 1) rowLayout -nc 4 -cw4 10 70 60 10;
						else rowLayout -nc 3 -cw3 10 70 10;
							text -l "     " -w 10 -h 25 -al "left";
							floatField -w 60 -h 25  -cc ("setCompileOneM "+$nodeName+" "+$attrNameNum+" "+$ft+" "+$j) ("float1"+$j);
							if($intCC > 1) button -h 25 -l "Remove" -c ("removeX3DSubFields "+$nodeName+" "+$fName+" "+$ft+" "+$j+" "+$i+" "+$feWindow);
							text -l "     " -w 10 -h 25 -al "left";
				    	setParent ..;
					float $fValues = `getAttr ($nodeName+"."+$attrNameNum)`;
					floatField -e -v $fValues ("float1"+$j);
					}
				}
				else if ($ft == "MFImage")
				{
					string $attrName = "x3d_"+$fName;
					int $j;
					for($j=0;$j<$intCC;$j++)
					{
						string $attrNameNum = $attrName+"_"+$j;
						if($intCC > 1) rowLayout -nc 4 -cw4 10 180 50 10;
						else rowLayout -nc 3 -cw3 10 180 10;
							text -l "     " -w 10 -h 25 -al "left";
							textField -w 60 -h 25  -cc ("setCompileOneStrM "+$nodeName+" "+$attrNameNum+" "+$ft+" "+$j) ("str1"+$j);
							if($intCC > 1) button -h 25 -l "Remove" -c ("removeX3DSubFields "+$nodeName+" "+$fName+" "+$ft+" "+$j+" "+$i+" "+$feWindow);
							text -l "     " -w 10 -h 25 -al "left";
				    	setParent ..;
						string $sValues = `getAttr ($nodeName+"."+$attrNameNum)`;
						textField -e -tx $sValues ("str1"+$j);
					}
				}
				else if ($ft == "MFInt32")
				{
					string $attrName = "x3d_"+$fName;
					int $j;
					for($j=0;$j<$intCC;$j++)
					{
						string $attrNameNum = $attrName+"_"+$j;
						if($intCC > 1) rowLayout -nc 4 -cw4 10 70 60 10;
						else rowLayout -nc 3 -cw3 10 70 10;
							text -l "     " -w 10 -h 25 -al "left";
							intField -w 60 -h 25  -cc ("setCompileOneIntM "+$nodeName+" "+$attrNameNum+" "+$ft+" "+$j) ("int1"+$j);
							if($intCC > 1) button -h 25 -l "Remove" -c ("removeX3DSubFields "+$nodeName+" "+$fName+" "+$ft+" "+$j+" "+$i+" "+$feWindow);
							text -l "     " -w 10 -h 25 -al "left";
			    		setParent ..;
						int $iValues = `getAttr ($nodeName+"."+$attrNameNum)`;
						intField -e -v $iValues ("int1"+$j);
					}
				}
				else if ($ft == "MFNode")
				{
					string $attrName = "x3d_"+$fName;
					int $j;
					for($j=0;$j<$intCC;$j++)
					{
						string $attrNameNum = $attrName+"_"+$j;
						if($intCC > 1) rowLayout -nc 4 -cw4 10 180 50 10;
						else rowLayout -nc 3 -cw3 10 180 10;
							text -l "     " -w 10 -h 25 -al "left";
							textField -w 60 -h 25  -cc ("setCompileOneStrM "+$nodeName+" "+$attrNameNum+" "+$ft+" "+$j) ("str1"+$j);
							if($intCC > 1) button -h 25 -l "Remove" -c ("removeX3DSubFields "+$nodeName+" "+$fName+" "+$ft+" "+$j+" "+$i+" "+$feWindow);
							text -l "     " -w 10 -h 25 -al "left";
				    	setParent ..;
						string $sValues = `getAttr ($nodeName+"."+$attrNameNum)`;
						textField -e -tx $sValues ("str1"+$j);
					}
				}
				else if ($ft == "MFRotation")
				{
					string $attrName = "x3d_"+$fName;
					int $j;
					for($j=0;$j<$intCC;$j++)
					{
						string $attrNameNum = $attrName+"_"+$j;
						if($intCC > 1) rowLayout -nc 6 -cw6 10 60 60 60 60 10;
						else rowLayout -nc 5 -cw5 10 70 70 70 10;
							text -l "     " -w 10 -h 25 -al "left";
							floatField -w 60 -h 25  -cc ("setCompileThreeM "+$nodeName+" "+$attrNameNum+" "+$ft+" "+$j) ("float1"+$j);
							floatField -w 60 -h 25  -cc ("setCompileThreeM "+$nodeName+" "+$attrNameNum+" "+$ft+" "+$j) ("float2"+$j);
							floatField -w 60 -h 25  -cc ("setCompileThreeM "+$nodeName+" "+$attrNameNum+" "+$ft+" "+$j) ("float3"+$j);
							if($intCC > 1) button -h 25 -l "Remove" -c ("removeX3DSubFields "+$nodeName+" "+$fName+" "+$ft+" "+$j+" "+$i+" "+$feWindow);
							text -l "     " -w 10 -h 25 -al "left";
				    	setParent ..;
						float $fValues[] = `getAttr ($nodeName+"."+$attrNameNum)`;
						floatField -e -v $fValues[0] ("float1"+$j);
						floatField -e -v $fValues[1] ("float2"+$j);
						floatField -e -v $fValues[2] ("float3"+$j);
					}
				}
				else if ($ft == "MFString")
				{
					string $attrName = "x3d_"+$fName;
					int $j;
					for($j=0;$j<$intCC;$j++)
					{
						string $attrNameNum = $attrName+"_"+$j;
						if($intCC > 1) rowLayout -nc 4 -cw4 10 180 50 10;
						else rowLayout -nc 3 -cw3 10 180 10;
							text -l "     " -w 10 -h 25 -al "left";
							textField -w 60 -h 25  -cc ("setCompileOneStrM "+$nodeName+" "+$attrNameNum+" "+$ft+" "+$j) ("str1"+$j);
							if($intCC > 1) button -h 25 -l "Remove" -c ("removeX3DSubFields "+$nodeName+" "+$fName+" "+$ft+" "+$j+" "+$i+" "+$feWindow);
							text -l "     " -w 10 -h 25 -al "left";
				    	setParent ..;
						string $sValues = `getAttr ($nodeName+"."+$attrNameNum)`;
						textField -e -tx $sValues ("str1"+$j);
					}
				}
				else if ($ft == "MFTime")
				{
					string $attrName = "x3d_"+$fName;
					int $j;
					for($j=0;$j<$intCC;$j++)
					{
						string $attrNameNum = $attrName+"_"+$j;
						if($intCC > 1) rowLayout -nc 4 -cw4 10 70 60 10;
						else rowLayout -nc 3 -cw3 10 70 10;
							text -l "     " -w 10 -h 25 -al "left";
							floatField -w 60 -h 25  -cc ("setCompileOneM "+$nodeName+" "+$attrNameNum+" "+$ft+" "+$j) ("float1"+$j);
							if($intCC > 1) button -h 25 -l "Remove" -c ("removeX3DSubFields "+$nodeName+" "+$fName+" "+$ft+" "+$j+" "+$i+" "+$feWindow);
							text -l "     " -w 10 -h 25 -al "left";
					    setParent ..;
						float $fValues = `getAttr ($nodeName+"."+$attrNameNum)`;
						floatField -e -v $fValues ("float1"+$j);
					}
				}
				else if ($ft == "MFVec2d")
				{
					string $attrName = "x3d_"+$fName;
					int $j;
					for($j=0;$j<$intCC;$j++)
					{
						string $attrNameNum = $attrName+"_"+$j;
						if($intCC > 1) rowLayout -nc 5 -cw5 10 70 70 50 10;
						else rowLayout -nc 4 -cw4 10 70 70 10;
							text -l "     " -w 10 -h 25 -al "left";
							floatField -w 60 -h 25  -cc ("setCompileTwoM "+$nodeName+" "+$attrNameNum+" "+$ft+" "+$j) ("float1"+$j);
							floatField -w 60 -h 25  -cc ("setCompileTwoM "+$nodeName+" "+$attrNameNum+" "+$ft+" "+$j) ("float2"+$j);
							if($intCC > 1) button -h 25 -l "Remove" -c ("removeX3DSubFields "+$nodeName+" "+$fName+" "+$ft+" "+$j+" "+$i+" "+$feWindow);
							text -l "     " -w 10 -h 25 -al "left";
				    	setParent ..;
						float $fValues[] = `getAttr ($nodeName+"."+$attrNameNum)`;
						floatField -e -v $fValues[0] ("float1"+$j);
						floatField -e -v $fValues[1] ("float2"+$j);
					}
				}
				else if ($ft == "MFVec2f")
				{
					string $attrName = "x3d_"+$fName;
					int $j;
					for($j=0;$j<$intCC;$j++)
					{
						string $attrNameNum = $attrName+"_"+$j;
						if($intCC > 1) rowLayout -nc 5 -cw5 10 70 70 50 10;
						else rowLayout -nc 4 -cw4 10 70 70 10;
							text -l "     " -w 10 -h 25 -al "left";
							floatField -w 60 -h 25  -cc ("setCompileTwoM "+$nodeName+" "+$attrNameNum+" "+$ft+" "+$j) ("float1"+$j);
							floatField -w 60 -h 25  -cc ("setCompileTwoM "+$nodeName+" "+$attrNameNum+" "+$ft+" "+$j) ("float2"+$j);
							if($intCC > 1) button -h 25 -l "Remove" -c ("removeX3DSubFields "+$nodeName+" "+$fName+" "+$ft+" "+$j+" "+$i+" "+$feWindow);
							text -l "     " -w 10 -h 25 -al "left";
				    	setParent ..;
						float $fValues[] = `getAttr ($nodeName+"."+$attrNameNum)`;
						floatField -e -v $fValues[0] ("float1"+$j);
						floatField -e -v $fValues[1] ("float2"+$j);
					}
				}
				else if ($ft == "MFVec3d")
				{
					string $attrName = "x3d_"+$fName;
					int $j;
					for($j=0;$j<$intCC;$j++)
					{
						string $attrNameNum = $attrName+"_"+$j;
						if($intCC > 1) rowLayout -nc 6 -cw6 10 60 60 60 60 10;
						else rowLayout -nc 5 -cw5 10 70 70 70 10;
							text -l "     " -w 10 -h 25 -al "left";
							floatField -w 60 -h 25  -cc ("setCompileThreeM "+$nodeName+" "+$attrNameNum+" "+$ft+" "+$j) ("float1"+$j);
							floatField -w 60 -h 25  -cc ("setCompileThreeM "+$nodeName+" "+$attrNameNum+" "+$ft+" "+$j) ("float2"+$j);
							floatField -w 60 -h 25  -cc ("setCompileThreeM "+$nodeName+" "+$attrNameNum+" "+$ft+" "+$j) ("float3"+$j);
							if($intCC > 1) button -h 25 -l "Remove" -c ("removeX3DSubFields "+$nodeName+" "+$fName+" "+$ft+" "+$j+" "+$i+" "+$feWindow);
							text -l "     " -w 10 -h 25 -al "left";
				    	setParent ..;
						float $fValues[] = `getAttr ($nodeName+"."+$attrNameNum)`;
						floatField -e -v $fValues[0] ("float1"+$j);
						floatField -e -v $fValues[1] ("float2"+$j);
						floatField -e -v $fValues[2] ("float3"+$j);
					}
				}
				else if ($ft == "MFVec3f")
				{
					string $attrName = "x3d_"+$fName;
					int $j;
					for($j=0;$j<$intCC;$j++)
					{
						string $attrNameNum = $attrName+"_"+$j;
						if($intCC > 1) rowLayout -nc 6 -cw6 10 60 60 60 60 10;
						else rowLayout -nc 5 -cw5 10 70 70 70 10;
							text -l "     " -w 10 -h 25 -al "left";
							floatField -w 60 -h 25  -cc ("setCompileThreeM "+$nodeName+" "+$attrNameNum+" "+$ft+" "+$j) ("float1"+$j);
							floatField -w 60 -h 25  -cc ("setCompileThreeM "+$nodeName+" "+$attrNameNum+" "+$ft+" "+$j) ("float2"+$j);
							floatField -w 60 -h 25  -cc ("setCompileThreeM "+$nodeName+" "+$attrNameNum+" "+$ft+" "+$j) ("float3"+$j);
							if($intCC > 1) button -h 25 -l "Remove" -c ("removeX3DSubFields "+$nodeName+" "+$fName+" "+$ft+" "+$j+" "+$i+" "+$feWindow);
							text -l "     " -w 10 -h 25 -al "left";
				    	setParent ..;
						float $fValues[] = `getAttr ($nodeName+"."+$attrNameNum)`;
						floatField -e -v $fValues[0] ("float1"+$j);
						floatField -e -v $fValues[1] ("float2"+$j);
						floatField -e -v $fValues[2] ("float3"+$j);
					}
				}
		}
		else
		{
			rowLayout -nc 4 -cw4 10 140 140 10;
				text -l "     " -h 25 -w 10 -fn "smallBoldLabelFont" -al "left";
				text -l ("Value for: "+$fName) -h 25 -w 100 -fn "smallBoldLabelFont" -al "left";
				text -l "     " -h 25 -w 10 -fn "smallBoldLabelFont" -al "left";
				text -l "     " -h 25 -w 10 -fn "smallBoldLabelFont" -al "left";
			setParent ..;
			rowLayout;
				text -l "     " -h 10 -fn "smallBoldLabelFont" -al "left";
			setParent ..;		   
				if($ft == "SFBool")
				{
					string $attrName = "x3d_"+$fName;
					rowLayout -nc 4 -cw4 10 50 50 10;
						text -l "     " -h 25 -al "left";
						string $collection1 = `radioCollection`;
				    	string $rb1, $rb2;
				    	$rb1 = `radioButton -label "TRUE" -onc ("setFieldValue "+$nodeName+" "+$attrName+" "+$ft+" 1")`;
				    	$rb2 = `radioButton -label "FALSE" -onc ("setFieldValue "+$nodeName+" "+$attrName+" "+$ft+" 0")`;
						text -l "     " -h 25 -al "left";
			    	setParent ..;
					int $bool1 = `getAttr ($nodeName+"."+$attrName)`;
					if($bool1==0) radioCollection -e -select $rb2 $collection1;
					else radioCollection -e -select $rb1 $collection1;
				}
				else if ($ft == "SFColor")
				{
					string $attrName = "x3d_"+$fName;
					rowLayout -nc 5 -cw5 10 70 70 70 10;
						text -l "     " -w 10 -h 25 -al "left";
						floatField -w 60 -h 25  -cc ("setCompileThree "+$nodeName+" "+$attrName+" "+$ft) float1;
						floatField -w 60 -h 25  -cc ("setCompileThree "+$nodeName+" "+$attrName+" "+$ft) float2;
						floatField -w 60 -h 25  -cc ("setCompileThree "+$nodeName+" "+$attrName+" "+$ft) float3;
						text -l "     " -w 10 -h 25 -al "left";
			    	setParent ..;
					float $fValues[] = `getAttr ($nodeName+"."+$attrName)`;
					floatField -e -v $fValues[0] float1;
					floatField -e -v $fValues[1] float2;
					floatField -e -v $fValues[2] float3;
				}
				else if ($ft == "SFColorRGBA")
				{
					string $attrName = "x3d_"+$fName;
					rowLayout -nc 6 -cw6 10 70 70 70 70 10;
						text -l "     " -w 10 -h 25 -al "left";
						floatField -w 60 -h 25  -cc ("setCompileFour "+$nodeName+" "+$attrName+" "+$ft) float1;
						floatField -w 60 -h 25  -cc ("setCompileFour "+$nodeName+" "+$attrName+" "+$ft) float2;
						floatField -w 60 -h 25  -cc ("setCompileFour "+$nodeName+" "+$attrName+" "+$ft) float3;
						floatField -w 60 -h 25  -cc ("setCompileFour "+$nodeName+" "+$attrName+" "+$ft) float4;
						text -l "     " -w 10 -h 25 -al "left";
			    	setParent ..;
					float $fValues[] = `getAttr ($nodeName+"."+$attrName)`;
					floatField -e -v $fValues[0] float1;
					floatField -e -v $fValues[1] float2;
					floatField -e -v $fValues[2] float3;
					floatField -e -v $fValues[2] float4;
				}
				else if ($ft == "SFDouble")
				{
					string $attrName = "x3d_"+$fName;
					rowLayout -nc 3 -cw3 10 70 10;
						text -l "     " -w 10 -h 25 -al "left";
						floatField -w 60 -h 25  -cc ("setCompileOne "+$nodeName+" "+$attrName+" "+$ft) float1;
						text -l "     " -w 10 -h 25 -al "left";
			    	setParent ..;
					float $fValues = `getAttr ($nodeName+"."+$attrName)`;
					floatField -e -v $fValues float1;
				}
				else if ($ft == "SFFloat")
				{
					string $attrName = "x3d_"+$fName;
					rowLayout -nc 3 -cw3 10 70 10;
						text -l "     " -w 10 -h 25 -al "left";
						floatField -w 60 -h 25  -cc ("setCompileOne "+$nodeName+" "+$attrName+" "+$ft) float1;
						text -l "     " -w 10 -h 25 -al "left";
			    	setParent ..;
					float $fValues = `getAttr ($nodeName+"."+$attrName)`;
					floatField -e -v $fValues float1;
				}
				else if ($ft == "SFImage")
				{
					string $attrName = "x3d_"+$fName;
					rowLayout -nc 3 -cw3 10 70 10;
						text -l "     " -w 10 -h 25 -al "left";
						textField -w 60 -h 25  -cc ("setCompileOneStr "+$nodeName+" "+$attrName+" "+$ft) str1;
						text -l "     " -w 10 -h 25 -al "left";
			    	setParent ..;
					string $sValues = `getAttr ($nodeName+"."+$attrName)`;
					textField -e -tx $sValues str1;
				}
				else if ($ft == "SFInt32")
				{
					string $attrName = "x3d_"+$fName;
					rowLayout -nc 3 -cw3 10 70 10;
						text -l "     " -w 10 -h 25 -al "left";
						intField -w 60 -h 25  -cc ("setCompileOneInt "+$nodeName+" "+$attrName+" "+$ft) int1;
						text -l "     " -w 10 -h 25 -al "left";
			    	setParent ..;
					int $iValues = `getAttr ($nodeName+"."+$attrName)`;
					intField -e -v $iValues int1;
				}
				else if ($ft == "SFNode")
				{
					string $attrName = "x3d_"+$fName;
					rowLayout -nc 3 -cw3 10 70 10;
						text -l "     " -w 10 -h 25 -al "left";
						textField -w 60 -h 25  -cc ("setCompileOneStr "+$nodeName+" "+$attrName+" "+$ft) str1;
						text -l "     " -w 10 -h 25 -al "left";
			    	setParent ..;
					string $sValues = `getAttr ($nodeName+"."+$attrName)`;
					textField -e -tx $sValues str1;
				}
				else if ($ft == "SFRotation")
				{
					string $attrName = "x3d_"+$fName;
					rowLayout -nc 5 -cw5 10 70 70 70 10;
						text -l "     " -w 10 -h 25 -al "left";
						floatField -w 60 -h 25  -cc ("setCompileThree "+$nodeName+" "+$attrName+" "+$ft) float1;
						floatField -w 60 -h 25  -cc ("setCompileThree "+$nodeName+" "+$attrName+" "+$ft) float2;
						floatField -w 60 -h 25  -cc ("setCompileThree "+$nodeName+" "+$attrName+" "+$ft) float3;
						text -l "     " -w 10 -h 25 -al "left";
			    	setParent ..;
					float $fValues[] = `getAttr ($nodeName+"."+$attrName)`;
					floatField -e -v $fValues[0] float1;
					floatField -e -v $fValues[1] float2;
					floatField -e -v $fValues[2] float3;
				}
				else if ($ft == "SFString")
				{
					string $attrName = "x3d_"+$fName;
					rowLayout -nc 3 -cw3 10 70 10;
						text -l "     " -w 10 -h 25 -al "left";
						textField -w 60 -h 25  -cc ("setCompileOneStr "+$nodeName+" "+$attrName+" "+$ft) str1;
						text -l "     " -w 10 -h 25 -al "left";
			    	setParent ..;
					string $sValues = `getAttr ($nodeName+"."+$attrName)`;
					textField -e -tx $sValues str1;
				}
				else if ($ft == "SFTime")
				{
					string $attrName = "x3d_"+$fName;
					rowLayout -nc 3 -cw3 10 70 10;
						text -l "     " -w 10 -h 25 -al "left";
						floatField -w 60 -h 25  -cc ("setCompileOne "+$nodeName+" "+$attrName+" "+$ft) float1;
						text -l "     " -w 10 -h 25 -al "left";
			    	setParent ..;
					float $fValues = `getAttr ($nodeName+"."+$attrName)`;
					floatField -e -v $fValues float1;
				}
				else if ($ft == "SFVec2d")
				{
					string $attrName = "x3d_"+$fName;
					rowLayout -nc 4 -cw4 10 70 70 10;
						text -l "     " -w 10 -h 25 -al "left";
						floatField -w 60 -h 25  -cc ("setCompileTwo "+$nodeName+" "+$attrName+" "+$ft) float1;
						floatField -w 60 -h 25  -cc ("setCompileTwo "+$nodeName+" "+$attrName+" "+$ft) float2;
						text -l "     " -w 10 -h 25 -al "left";
			    	setParent ..;
					float $fValues[] = `getAttr ($nodeName+"."+$attrName)`;
					floatField -e -v $fValues[0] float1;
					floatField -e -v $fValues[1] float2;
				}
				else if ($ft == "SFVec2f")
				{
					string $attrName = "x3d_"+$fName;
					rowLayout -nc 4 -cw4 10 70 70 10;
						text -l "     " -w 10 -h 25 -al "left";
						floatField -w 60 -h 25  -cc ("setCompileTwo "+$nodeName+" "+$attrName+" "+$ft) float1;
						floatField -w 60 -h 25  -cc ("setCompileTwo "+$nodeName+" "+$attrName+" "+$ft) float2;
						text -l "     " -w 10 -h 25 -al "left";
			    	setParent ..;
					float $fValues[] = `getAttr ($nodeName+"."+$attrName)`;
					floatField -e -v $fValues[0] float1;
					floatField -e -v $fValues[1] float2;
				}
				else if ($ft == "SFVec3d")
				{
					string $attrName = "x3d_"+$fName;
					rowLayout -nc 5 -cw5 10 70 70 70 10;
						text -l "     " -w 10 -h 25 -al "left";
						floatField -w 60 -h 25  -cc ("setCompileThree "+$nodeName+" "+$attrName+" "+$ft) float1;
						floatField -w 60 -h 25  -cc ("setCompileThree "+$nodeName+" "+$attrName+" "+$ft) float2;
						floatField -w 60 -h 25  -cc ("setCompileThree "+$nodeName+" "+$attrName+" "+$ft) float3;
						text -l "     " -w 10 -h 25 -al "left";
			    	setParent ..;
					float $fValues[] = `getAttr ($nodeName+"."+$attrName)`;
					floatField -e -v $fValues[0] float1;
					floatField -e -v $fValues[1] float2;
					floatField -e -v $fValues[2] float3;
				}
				else if ($ft == "SFVec3f")
				{
					string $attrName = "x3d_"+$fName;
					rowLayout -nc 5 -cw5 10 70 70 70 10;
						text -l "     " -w 10 -h 25 -al "left";
						floatField -w 60 -h 25  -cc ("setCompileThree "+$nodeName+" "+$attrName+" "+$ft) float1;
						floatField -w 60 -h 25  -cc ("setCompileThree "+$nodeName+" "+$attrName+" "+$ft) float2;
						floatField -w 60 -h 25  -cc ("setCompileThree "+$nodeName+" "+$attrName+" "+$ft) float3;
						text -l "     " -w 10 -h 25 -al "left";
			    	setParent ..;
					float $fValues[] = `getAttr ($nodeName+"."+$attrName)`;
					floatField -e -v $fValues[0] float1;
					floatField -e -v $fValues[1] float2;
					floatField -e -v $fValues[2] float3;
				}
			setParent ..;		   
		}
	showWindow $feWindow;
}

global proc buildFieldEditorInterface(string $aNodeName, string $aAttrName, string $attrName)
{
	columnLayout -columnAttach "left" 0 -columnWidth 440 editorColumn;
	
		rowLayout
		-nc 6
		-columnWidth6 10 100 100 100 80 50;
			text -l "       " -h 25 -w 10 -fn "smallBoldLabelFont" -al "left";
			text -l "Access Type" -h 25 -w 100 -fn "smallBoldLabelFont" -al "left";
			text -l "Field Type" -h 25 -w 100 -fn "smallBoldLabelFont" -al "left";
			text -l "Field Name" -h 25 -w 100 -fn "smallBoldLabelFont" -al "left";
			text -l "Field Value" -h 25 -w 80 -fn "smallBoldLabelFont" -al "left";
			text -l "       " -h 25 -w 50 -fn "smallBoldLabelFont" -al "left";
		setParent ..;
					
	int $fLengths = `getAttr ($aNodeName + ".x3dfc")`;
	if($fLengths > 0) writeFields($aNodeName, $fLengths);
	setParent ..;
}

global proc buildFieldCreatorInterface(string $aNodeName, string $aAttrName, string $attrName)
{
global string $ftX3DArray[];
int $atSelVal = `optionVar -q "x3dFieldAccessChoice"`;
int $ftSelVal = `optionVar -q "x3dFieldTypeChoice"`;
		columnLayout -columnAttach "left" 0 -rowSpacing 2 -columnWidth 450 upperColumn;
			rowLayout
				-nc 4
				-columnWidth4 130 130 130 60;
				columnLayout -columnAttach "left" 0 -rowSpacing 2 -columnWidth 130;
					text -l "Access Type   " -h 25 -fn "smallBoldLabelFont" -rs true -al "left";
					textScrollList -numberOfRows 4 -allowMultiSelection false -append "inputOnly" -append "outputOnly" -append "inputOutput" -append "initializeOnly" -sc ("aTypeSelect "+$aNodeName) -sii $atSelVal etTSLSelect;
				setParent ..;

				columnLayout -columnAttach "left" 0 -rowSpacing 2 -columnWidth 130;
					text -l "Field Type   " -h 25 -fn "smallBoldLabelFont" -rs true -al "left";
					textScrollList -numberOfRows 4 -allowMultiSelection false -sc ("fTypeSelect "+$aNodeName) ftTSLSelect;
					int $fieldTypeLength = size($ftX3DArray);//`getAttr $attrName`;
					int $fc;
					for($fc=0;$fc<$fieldTypeLength;$fc++)
					{
						textScrollList -e -append $ftX3DArray[$fc] ftTSLSelect;
					}
					textScrollList -e -sii $ftSelVal ftTSLSelect;
				setParent ..;
							
				columnLayout -columnAttach "left" 0 -rowSpacing 2 -columnWidth 130;
					text -l "Name" -w 130 -h 25 -fn "smallBoldLabelFont" -rs true -al "left";
					textField -text "" -w 130 -h 25 newEventName;
					button -l "Add" -w 130 -h 25 -al "center" -c ("x3dScriptEventAdd "+$aNodeName);
				setParent ..;
			
				columnLayout -columnAttach "left" 0 -rowSpacing 2 -columnWidth 60;
					text -l " " -h 25 -fn "smallBoldLabelFont" -rs true -al "left";
					text -l " " -h 25;
				setParent ..;
			setParent ..;
		setParent ..;
}

global proc buildRemoteURLInterface(string $aNodeName, string $aAttrName, string $attrName)
{
	int $lCount = `getAttr ($aNodeName+".lscc")`;
	int $rCount = `getAttr ($aNodeName+".rscc")`;
	int $tCount = $rCount + $lCount;
	
	columnLayout -columnAttach "left" 0 -columnWidth 440 rUrlColumn;
		rowLayout
		-nc 5
		-columnWidth5 10 200 20 200 10;
			text -l "       " -h 25 -w 10 -fn "smallBoldLabelFont" -al "left";
			text -l "Remote URL's" -h 25 -w 200 -fn "smallBoldLabelFont" -al "left";
			text -l "       " -h 25 -w 20 -fn "smallBoldLabelFont" -al "left";
			text -l "       " -h 25 -w 200 -fn "smallBoldLabelFont" -al "left";
			text -l "       " -h 25 -w 10 -fn "smallBoldLabelFont" -al "left";
		setParent ..;
		
		rowLayout
		-nc 5
		-columnWidth5 10 200 20 120 90;
			text -l "       " -h 25 -w 10 -al "left";
			textScrollList -nr 3 -ams false -dkc ("deleteRemoteUrl "+$aNodeName) -sc ("selectRemoteUrl "+$aNodeName) remoteUrlList;
			text -l "       " -h 25 -w 20 -al "left";
			button -l "Add Remote URL" -c ("addRemoteUrl "+$aNodeName);
			text -l "       " -h 25 -w 10 -al "left";
		setParent ..;
		
		int $intVal;		
		if($rCount == 0) textScrollList -e -append "No Remote URLs" remoteUrlList;
		else
		{
			int $i;
			for($i=0;$i<$rCount;$i++) textScrollList -e -append ("Remote Url #"+$i) remoteUrlList;
			int $x3drl = `getAttr ($aNodeName+".x3drl")`;
			textScrollList -e -sii $x3drl remoteUrlList;
			int $intVal2[] = `textScrollList -q -sii remoteUrlList`;
			$intVal = $intVal2[0]-1;
		}
		
		rowLayout
		-nc 2
		-columnWidth2 10 430;
			text -l "       " -h 10 -w 10 -al "left";
			text -l "       " -h 10 -w 20 -al "left";
		setParent ..;

		rowLayout
		-nc 3
		-columnWidth3 10 420 10;
			text -l "       " -h 25 -w 10 -al "left";
			textField -h 25 -w 420 -cc ("changeRemoteUrl "+$aNodeName) -ec ("changeRemoteUrl "+$aNodeName) remoteReadout;
			string $textVal = "";		
			if($rCount != 0) $textVal = `getAttr ($aNodeName+".remoteScript["+$intVal+"]")`;
			textField -e -text $textVal remoteReadout;
			text -l "       " -h 25 -w 10 -al "left";
		setParent ..;
		
		rowLayout
		-nc 2
		-columnWidth2 10 430;
			text -l "       " -h 10 -w 10 -al "left";
			text -l "       " -h 10 -w 20 -al "left";
		setParent ..;
	setParent ..;
}

global proc changeRemoteUrl(string $nodeName)
{
	string $nameList[] = `textScrollList -q -si remoteUrlList`;
	if($nameList[0]!="No Remote URLs" || $nameList[0] != "")
	{
		string $rString = `textField -q -tx remoteReadout`;
		int $nameInt[] = `textScrollList -q -sii remoteUrlList`;
		int $newInt = $nameInt[0]-1;
		setAttr ($nodeName+".remoteScript["+$newInt+"]") -type "string" $rString;
	}
}

global proc selectRemoteUrl(string $nodeName)
{
	string $nameList[] = `textScrollList -q -si remoteUrlList`;
	if($nameList[0]!="No Remote URLs")
	{
		int $nameInt[] = `textScrollList -q -sii remoteUrlList`;
		int $newInt = $nameInt[0]-1;
		string $current = `getAttr ($nodeName+".remoteScript["+$newInt+"]")`;
		textField -e -tx $current remoteReadout;
		setAttr ($nodeName+".x3drl") $nameInt[0];
	}
}

global proc deleteRemoteUrl(string $nodeName)
{
	string $nameList[] = `textScrollList -q -si remoteUrlList`;
	if($nameList[0]!="No Remote URLs")
	{
		int $nameInt[] = `textScrollList -q -sii remoteUrlList`;
		int $skipInt = $nameInt[0]-1;
		int $length = `getAttr ($nodeName+".rscc")`;
		int $i;
		int $j=0;
		string $newArray[];
		for($i=0; $i<$length;$i++)
		{
			if($i != $skipInt)
			{
				$newArray[$j] = `getAttr ($nodeName+".remoteScript["+$i+"]")`;
				$j=$j+1;
			}
		}
		$length = $length-1;
		textScrollList -e -ra remoteUrlList;
		for($i=0;$i<$length;$i++)
		{
			setAttr ($nodeName+".remoteScript["+$i+"]") -type "string" $newArray[$i];
			textScrollList -e -append ("Remote Url #"+$i) remoteUrlList;
		}
		if($skipInt != 0 && $length != 0)
		{
			textScrollList -e -sii $skipInt remoteUrlList;
			setAttr ($nodeName+".x3drl") $skipInt;
			int $siNew = $skipInt-1;
			textField -e -tx $newArray[$siNew] remoteReadout;
		}
		else if($length != 0)
		{
			textScrollList -e -sii 1 remoteUrlList;
			setAttr ($nodeName+".x3drl") 1;
			textField -e -tx $newArray[0] remoteReadout;
		}
		else
		{
			textScrollList -e -append "No Remote URLs" remoteUrlList;
			textField -e -tx "" remoteReadout;
		}
		
		setAttr ($nodeName+".rscc") $length;
	}
}

global proc addRemoteUrl(string $nodeName)
{
	int $rCount = `getAttr ($nodeName+".rscc")`;
	setAttr ($nodeName+".remoteScript["+$rCount+"]") -type "string" "http://";
	$rCount = $rCount + 1;
	setAttr ($nodeName+".rscc") $rCount;
	textScrollList -e -ra remoteUrlList;
	int $i;
	for($i=0;$i<$rCount;$i++)
	{
		textScrollList -e -append ("Remote Url #"+$i) remoteUrlList;
	}
	textScrollList -e -sii $rCount remoteUrlList;
	textField -e -tx "http://" remoteReadout;
	setAttr ($nodeName+".x3drl") $rCount;
}

global proc buildLocalURLInterface(string $aNodeName, string $aAttrName, string $attrName)
{
	int $lCount = `getAttr ($aNodeName+".lscc")`;
	int $rCount = `getAttr ($aNodeName+".rscc")`;
	int $tCount = $rCount + $lCount;
	
	columnLayout -columnAttach "left" 0 -columnWidth 440 lUrlColumn;
		rowLayout
		-nc 5
		-columnWidth5 10 200 20 200 10;
			text -l "       " -h 25 -w 10 -fn "smallBoldLabelFont" -al "left";
			text -l "Local URL's" -h 25 -w 200 -fn "smallBoldLabelFont" -al "left";
			text -l "       " -h 25 -w 20 -fn "smallBoldLabelFont" -al "left";
			text -l "       " -h 25 -w 200 -fn "smallBoldLabelFont" -al "left";
			text -l "       " -h 25 -w 10 -fn "smallBoldLabelFont" -al "left";
		setParent ..;
					
		rowLayout
		-nc 5
		-columnWidth5 10 200 20 120 90;
			text -l "       " -h 25 -w 10 -al "left";
			
			textScrollList -nr 3 -ams false  -dkc ("deleteLocalUrl "+$aNodeName) -sc ("selectLocalUrl "+$aNodeName) localUrlList;
			
			text -l "       " -h 25 -w 20 -al "left";
			
			button -l "Add Local URL" -c ("addLocalUrl "+$aNodeName);
			
			text -l "       " -h 25 -w 10 -al "left";
		setParent ..;
		
		int $intVal;		
		if($lCount == 0) textScrollList -e -append "No Local URLs" localUrlList; 
		else
		{
			int $i;
			for($i=0;$i<$lCount;$i++) textScrollList -e -append ("Local Url #"+$i) localUrlList;
			int $x3dll = `getAttr ($aNodeName+".x3dll")`;
			textScrollList -e -sii $x3dll localUrlList;
			int $intVal2[] = `textScrollList -q -sii localUrlList`;
			$intVal = $intVal2[0]-1;
		}

		rowLayout
		-nc 2
		-columnWidth2 10 430;
			text -l "       " -h 10 -w 10 -al "left";
			text -l "       " -h 10 -w 20 -al "left";
		setParent ..;
		
		rowLayout
		-nc 3
		-columnWidth3 10 420 10;
			text -l "       " -h 25 -w 10 -al "left";
			scrollField -h 150 -w 420 -cc ("changeLocalUrl "+$aNodeName) localReadout;
			string $textVal = "";		
			if($lCount != 0) $textVal = `getAttr ($aNodeName+".localScript["+$intVal+"]")`;
			scrollField -e -text $textVal localReadout;
			text -l "       " -h 25 -w 10 -al "left";
		setParent ..;
		
		rowLayout
		-nc 2
		-columnWidth2 10 430;
			text -l "       " -h 10 -w 10 -al "left";
			text -l "       " -h 10 -w 20 -al "left";
		setParent ..;
	setParent ..;
}	

global proc changeLocalUrl(string $nodeName)
{
	string $nameList[] = `textScrollList -q -si localUrlList`;
	if($nameList[0]!="No Local URLs" || $nameList[0] != "")
	{
		string $lString = `scrollField -q -tx localReadout`;
		int $nameInt[] = `textScrollList -q -sii localUrlList`;
		int $newInt = $nameInt[0]-1;
		setAttr ($nodeName+".localScript["+$newInt+"]") -type "string" $lString;
	}
}

global proc selectLocalUrl(string $nodeName)
{
	string $nameList[] = `textScrollList -q -si localUrlList`;
	if($nameList[0]!="No Local URLs")
	{
		int $nameInt[] = `textScrollList -q -sii localUrlList`;
		int $newInt = $nameInt[0]-1;
		string $current = `getAttr ($nodeName+".localScript["+$newInt+"]")`;
		scrollField -e -tx $current localReadout;
		setAttr ($nodeName+".x3dll") $nameInt[0];
	}
}

global proc deleteLocalUrl(string $nodeName)
{
	string $nameList[] = `textScrollList -q -si localUrlList`;
	if($nameList[0]!="No Local URLs")
	{
		int $nameInt[] = `textScrollList -q -sii localUrlList`;
		int $skipInt = $nameInt[0]-1;
		int $length = `getAttr ($nodeName+".lscc")`;
		int $i;
		int $j=0;
		string $newArray[];
		for($i=0; $i<$length;$i++)
		{
			if($i != $skipInt)
			{
				$newArray[$j] = `getAttr ($nodeName+".localScript["+$i+"]")`;
				$j=$j+1;
			}
		}
		$length = $length-1;
		textScrollList -e -ra localUrlList;
		for($i=0;$i<$length;$i++)
		{
			setAttr ($nodeName+".localScript["+$i+"]") -type "string" $newArray[$i];
			textScrollList -e -append ("Local Url #"+$i) localUrlList;
		}
		if($skipInt != 0 && $length != 0)
		{
			textScrollList -e -sii $skipInt localUrlList;
			setAttr ($nodeName+".x3dll") $skipInt;
			int $siNew = $skipInt-1;
			scrollField -e -tx $newArray[$siNew] localReadout;
		}
		else if($length != 0)
		{
			textScrollList -e -sii 1 localUrlList;
			setAttr ($nodeName+".x3dll") 1;
			scrollField -e -tx $newArray[0] localReadout;
		}
		else
		{
			textScrollList -e -append "No Local URLs" localUrlList;
			scrollField -e -tx "" localReadout;
		}
		
		setAttr ($nodeName+".lscc") $length;
	}
}

global proc addLocalUrl(string $nodeName)
{
	int $lCount = `getAttr ($nodeName+".lscc")`;
	setAttr ($nodeName+".localScript["+$lCount+"]") -type "string" "ecmascript:";
	$lCount = $lCount + 1;
	setAttr ($nodeName+".lscc") $lCount;
	textScrollList -e -ra localUrlList;
	int $i;
	for($i=0;$i<$lCount;$i++)
	{
		textScrollList -e -append ("Local Url #"+$i) localUrlList;
	}
	textScrollList -e -sii $lCount localUrlList;
	scrollField -e -tx "ecmascript:" localReadout;
	setAttr ($nodeName+".x3dll") $lCount;
}

global proc aTypeSelect(string $nodeName)
{
	int $selInd[] = `textScrollList -q -sii etTSLSelect`;
	optionVar -iv "x3dFieldAccessChoice" $selInd[0];
}

global proc fTypeSelect(string $nodeName)
{
	int $selInd[] = `textScrollList -q -sii ftTSLSelect`;
	optionVar -iv "x3dFieldTypeChoice" $selInd[0];
}

global proc x3dScriptEventAdd(string $aNodeName)
{
	string $atSelection[] = `textScrollList -q -si etTSLSelect`;
	string $ftSelection[] = `textScrollList -q -si ftTSLSelect`;
	string $eName = `textField -q -text newEventName`;
	addX3DScriptFieldPushed($atSelection[0],$ftSelection[0],$eName,$aNodeName);
	
}

global proc addX3DScriptFieldPushed(string $at, string $ft, string $en, string $ann)
{
	int $isAddable = 1;

	string $breakString[];
	tokenize ($en, $breakString);
	int $blankLength = size($breakString);
	
	string $dupCheck = $breakString[0];
	
	if($blankLength > 1)
	{
		int $blCheck;
		$dupCheck = "";
		for($blCheck=0;$blCheck<$blankLength;$blCheck++)
		{
			$dupCheck = $dupCheck+$breakString[$blCheck];
			if($blCheck != ($blankLength-1))
			{
				$dupCheck = $dupCheck+"_";
			}
		}
	}

	int $fLength = `getAttr ($ann + ".x3dFieldCount")`;
	int $ac;
	for($ac=0;$ac<$fLength;$ac++)
	{
		string $existingName = `getAttr ($ann+".fieldName["+$ac+"]")`;
		if($dupCheck == $existingName)
		{
			$isAddable = 0;
			error("The name of this field or event already exists!!!");
			textField -e -text "" newEventName;
		}
	}
	
	if($dupCheck == "")
	{
		$isAddable = 0;
		error("The name has been left blank!!!");
		textField -e -text "" newEventName;
	}
	
	if($isAddable){
		addX3DScriptField($at,$ft,$dupCheck,$ann);
		if($at == "inputOnly" || $at == "outputOnly") forceAERefresh($ann);
		else evalDeferred("refreshAE");
	}
}

global proc addX3DScriptField(string $at, string $ft, string $en, string $ann)//888888
{
	if($at == "inputOutput" || $at == "initializeOnly")
	{
		string $fvstr = "x3d_"+$en;
		int $bc = `getAttr ($ann+".x3dbc")`;
		string $bgen = "x3d_gen_bc_"+$bc;
		int $bc = $bc+1;
		
		if($ft == "SFBool")
		{
			addAttr -ln $bgen -h true -at bool $ann;
			renameAttr ($ann+"."+$bgen) $fvstr;
		}
		else if ($ft == "SFColor")
		{
			string $bgen0 = $bgen+"_0";
			string $bgen1 = $bgen+"_1";
			string $bgen2 = $bgen+"_2";
			string $fvstr0 = $fvstr+"_0";
			string $fvstr1 = $fvstr+"_1";
			string $fvstr2 = $fvstr+"_2";
			
			addAttr -ln $bgen -h true -at float3 $ann;
			addAttr -ln $bgen0 -h true -at "float" -parent $bgen $ann;
			addAttr -ln $bgen1 -h true -at "float" -parent $bgen $ann;
			addAttr -ln $bgen2 -h true -at "float" -parent $bgen $ann;

			renameAttr ($ann+"."+$bgen) $fvstr;
			renameAttr ($ann+"."+$bgen0) $fvstr0;
			renameAttr ($ann+"."+$bgen1) $fvstr1;
			renameAttr ($ann+"."+$bgen2) $fvstr2;

		}
		else if ($ft == "SFColorRGBA")
		{
			string $bgen0 = $bgen+"_0";
			string $bgen1 = $bgen+"_1";
			string $bgen2 = $bgen+"_2";
			string $bgen3 = $bgen+"_3";
			
			string $fvstr0 = $fvstr+"_0";
			string $fvstr1 = $fvstr+"_1";
			string $fvstr2 = $fvstr+"_2";
			string $fvstr3 = $fvstr+"_3";
			
			addAttr -ln $bgen -h true -nc 4 -at compound $ann;
			addAttr -ln $bgen0 -h true -at "float" -parent $bgen $ann;
			addAttr -ln $bgen1 -h true -at "float" -parent $bgen $ann;
			addAttr -ln $bgen2 -h true -at "float" -parent $bgen $ann;
			addAttr -ln $bgen3 -h true -at "float" -parent $bgen $ann;

			renameAttr ($ann+"."+$bgen) $fvstr;
			renameAttr ($ann+"."+$bgen0) $fvstr0;
			renameAttr ($ann+"."+$bgen1) $fvstr1;
			renameAttr ($ann+"."+$bgen2) $fvstr2;
			renameAttr ($ann+"."+$bgen3) $fvstr3;
			
		}
		else if ($ft == "SFDouble")
		{
			addAttr -ln $bgen -h true -at double $ann;
			renameAttr ($ann+"."+$bgen) $fvstr;
		}
		else if ($ft == "SFFloat")
		{
			addAttr -ln $bgen -h true -at "float" $ann;
			renameAttr ($ann+"."+$bgen) $fvstr;
		}
		else if ($ft == "SFImage")
		{
			addAttr -ln $bgen -h true -dt "string" $ann;
			renameAttr ($ann+"."+$bgen) $fvstr;
		}
		else if ($ft == "SFInt32")
		{
			addAttr -ln $bgen -h true -at long $ann;
			renameAttr ($ann+"."+$bgen) $fvstr;
		}
		else if ($ft == "SFNode")
		{
			addAttr -ln $bgen -h true -dt "string" $ann;
			renameAttr ($ann+"."+$bgen) $fvstr;
		}
		else if ($ft == "SFRotation")
		{
			string $bgen0 = $bgen+"_0";
			string $bgen1 = $bgen+"_1";
			string $bgen2 = $bgen+"_2";
			string $fvstr0 = $fvstr+"_0";
			string $fvstr1 = $fvstr+"_1";
			string $fvstr2 = $fvstr+"_2";
			
			addAttr -ln $bgen -h true -at float3 $ann;
			addAttr -ln $bgen0 -h true -at "float" -parent $bgen $ann;
			addAttr -ln $bgen1 -h true -at "float" -parent $bgen $ann;
			addAttr -ln $bgen2 -h true -at "float" -parent $bgen $ann;

			renameAttr ($ann+"."+$bgen) $fvstr;
			renameAttr ($ann+"."+$bgen0) $fvstr0;
			renameAttr ($ann+"."+$bgen1) $fvstr1;
			renameAttr ($ann+"."+$bgen2) $fvstr2;
		}
		else if ($ft == "SFString")
		{
			addAttr -ln $bgen -h true -dt "string" $ann;
			renameAttr ($ann+"."+$bgen) $fvstr;
		}
		else if ($ft == "SFTime")
		{
			addAttr -ln $bgen -h true -at double $ann;
			renameAttr ($ann+"."+$bgen) $fvstr;
		}
		else if ($ft == "SFVec2d")
		{
			string $bgen0 = $bgen+"_0";
			string $bgen1 = $bgen+"_1";
			string $fvstr0 = $fvstr+"_0";
			string $fvstr1 = $fvstr+"_1";
			
			addAttr -ln $bgen -h true -at double2 $ann;
			addAttr -ln $bgen0 -h true -at double -parent $bgen $ann;
			addAttr -ln $bgen1 -h true -at double -parent $bgen $ann;

			renameAttr ($ann+"."+$bgen) $fvstr;
			renameAttr ($ann+"."+$bgen0) $fvstr0;
			renameAttr ($ann+"."+$bgen1) $fvstr1;
		}
		else if ($ft == "SFVec2f")
		{
			string $bgen0 = $bgen+"_0";
			string $bgen1 = $bgen+"_1";
			string $fvstr0 = $fvstr+"_0";
			string $fvstr1 = $fvstr+"_1";
			
			addAttr -ln $bgen -h true -at float2 $ann;
			addAttr -ln $bgen0 -h true -at "float" -parent $bgen $ann;
			addAttr -ln $bgen1 -h true -at "float" -parent $bgen $ann;

			renameAttr ($ann+"."+$bgen) $fvstr;
			renameAttr ($ann+"."+$bgen0) $fvstr0;
			renameAttr ($ann+"."+$bgen1) $fvstr1;
		}
		else if ($ft == "SFVec3d")
		{
			string $bgen0 = $bgen+"_0";
			string $bgen1 = $bgen+"_1";
			string $bgen2 = $bgen+"_2";
			string $fvstr0 = $fvstr+"_0";
			string $fvstr1 = $fvstr+"_1";
			string $fvstr2 = $fvstr+"_2";
			
			addAttr -ln $bgen -h true -at double3 $ann;
			addAttr -ln $bgen0 -h true -at double -parent $bgen $ann;
			addAttr -ln $bgen1 -h true -at double -parent $bgen $ann;
			addAttr -ln $bgen2 -h true -at double -parent $bgen $ann;

			renameAttr ($ann+"."+$bgen) $fvstr;
			renameAttr ($ann+"."+$bgen0) $fvstr0;
			renameAttr ($ann+"."+$bgen1) $fvstr1;
			renameAttr ($ann+"."+$bgen2) $fvstr2;
		}
		else if ($ft == "SFVec3f")
		{
			string $bgen0 = $bgen+"_0";
			string $bgen1 = $bgen+"_1";
			string $bgen2 = $bgen+"_2";
			string $fvstr0 = $fvstr+"_0";
			string $fvstr1 = $fvstr+"_1";
			string $fvstr2 = $fvstr+"_2";
			
			addAttr -ln $bgen -h true -at float3 $ann;
			addAttr -ln $bgen0 -h true -at "float" -parent $bgen $ann;
			addAttr -ln $bgen1 -h true -at "float" -parent $bgen $ann;
			addAttr -ln $bgen2 -h true -at "float" -parent $bgen $ann;

			renameAttr ($ann+"."+$bgen) $fvstr;
			renameAttr ($ann+"."+$bgen0) $fvstr0;
			renameAttr ($ann+"."+$bgen1) $fvstr1;
			renameAttr ($ann+"."+$bgen2) $fvstr2;
		}
		else if ($ft == "MFBool")
		{
			string $bgen0 = $bgen+"_0";
			string $bgencc = $bgen+"_cc";
			
			string $fvstr0 = $fvstr+"_0";
			string $fvstrcc = $fvstr+"_cc";
			addAttr -ln $bgen -h true -nc 1 -at compound $ann;
			addAttr -ln $bgen0 -h true -at bool -parent $bgen $ann;
			addAttr -ln $bgencc -h true -at long $ann;
			setAttr ($ann+"."+$bgencc) 1;
			
			renameAttr ($ann+"."+$bgen) $fvstr;
			renameAttr ($ann+"."+$bgen0) $fvstr0;
			renameAttr ($ann+"."+$bgencc) $fvstrcc;
		}
		else if ($ft == "MFColor")
		{
			string $bgen0 = $bgen+"_0";
			string $bgen00 = $bgen0+"_0";
			string $bgen01 = $bgen0+"_1";
			string $bgen02 = $bgen0+"_2";
			string $bgencc = $bgen+"_cc";
			
			string $fvstr0 = $fvstr+"_0";
			string $fvstr00 = $fvstr0+"_0";
			string $fvstr01 = $fvstr0+"_1";
			string $fvstr02 = $fvstr0+"_2";
			string $fvstrcc = $fvstr+"_cc";
			addAttr -ln $bgen -h true -nc 1 -at compound $ann;
			addAttr -ln $bgen0 -h true -at float3 -parent $bgen $ann;
			addAttr -ln $bgen00 -h true -at "float" -parent $bgen0 $ann;
			addAttr -ln $bgen01 -h true -at "float" -parent $bgen0 $ann;
			addAttr -ln $bgen02 -h true -at "float" -parent $bgen0 $ann;
			addAttr -ln $bgencc -h true -at long $ann;
			setAttr ($ann+"."+$bgencc) 1;
			
			renameAttr ($ann+"."+$bgen) $fvstr;
			renameAttr ($ann+"."+$bgen0) $fvstr0;
			renameAttr ($ann+"."+$bgen00) $fvstr00;
			renameAttr ($ann+"."+$bgen01) $fvstr01;
			renameAttr ($ann+"."+$bgen02) $fvstr02;
			renameAttr ($ann+"."+$bgencc) $fvstrcc;
		}
		else if ($ft == "MFColorRGBA")
		{
			string $bgen0 = $bgen+"_0";
			string $bgen00 = $bgen0+"_0";
			string $bgen01 = $bgen0+"_1";
			string $bgen02 = $bgen0+"_2";
			string $bgen03 = $bgen0+"_3";
			string $bgencc = $bgen+"_cc";
			
			string $fvstr0 = $fvstr+"_0";
			string $fvstr00 = $fvstr0+"_0";
			string $fvstr01 = $fvstr0+"_1";
			string $fvstr02 = $fvstr0+"_2";
			string $fvstr03 = $fvstr0+"_3";
			string $fvstrcc = $fvstr+"_cc";
			
			addAttr -ln $bgen -h true -nc 1 -at compound $ann;
			addAttr -ln $bgen0 -h true -nc 4 -at compound -parent $bgen $ann;
			addAttr -ln $bgen00 -h true -at "float" -parent $bgen0 $ann;
			addAttr -ln $bgen01 -h true -at "float" -parent $bgen0 $ann;
			addAttr -ln $bgen02 -h true -at "float" -parent $bgen0 $ann;
			addAttr -ln $bgen03 -h true -at "float" -parent $bgen0 $ann;
			addAttr -ln $bgencc -h true -at long $ann;
			setAttr ($ann+"."+$bgencc) 1;
			
			renameAttr ($ann+"."+$bgen) $fvstr;
			renameAttr ($ann+"."+$bgen0) $fvstr0;
			renameAttr ($ann+"."+$bgen00) $fvstr00;
			renameAttr ($ann+"."+$bgen01) $fvstr01;
			renameAttr ($ann+"."+$bgen02) $fvstr02;
			renameAttr ($ann+"."+$bgen03) $fvstr03;
			renameAttr ($ann+"."+$bgencc) $fvstrcc;
		}
		else if ($ft == "MFDouble")
		{
			string $bgen0 = $bgen+"_0";
			string $bgencc = $bgen+"_cc";
			
			string $fvstr0 = $fvstr+"_0";
			string $fvstrcc = $fvstr+"_cc";
			addAttr -ln $bgen -h true -nc 1 -at compound $ann;
			addAttr -ln $bgen0 -h true -at double -parent $bgen $ann;
			addAttr -ln $bgencc -h true -at long $ann;
			setAttr ($ann+"."+$bgencc) 1;
			
			renameAttr ($ann+"."+$bgen) $fvstr;
			renameAttr ($ann+"."+$bgen0) $fvstr0;
			renameAttr ($ann+"."+$bgencc) $fvstrcc;
		}
		else if ($ft == "MFFloat")
		{
			string $bgen0 = $bgen+"_0";
			string $bgencc = $bgen+"_cc";
			
			string $fvstr0 = $fvstr+"_0";
			string $fvstrcc = $fvstr+"_cc";
			addAttr -ln $bgen -h true -nc 1 -at compound $ann;
			addAttr -ln $bgen0 -h true -at "float" -parent $bgen $ann;
			addAttr -ln $bgencc -h true -at long $ann;
			setAttr ($ann+"."+$bgencc) 1;
			
			renameAttr ($ann+"."+$bgen) $fvstr;
			renameAttr ($ann+"."+$bgen0) $fvstr0;
			renameAttr ($ann+"."+$bgencc) $fvstrcc;
		}
		else if ($ft == "MFImage")
		{
			string $bgen0 = $bgen+"_0";
			string $bgencc = $bgen+"_cc";
			
			string $fvstr0 = $fvstr+"_0";
			string $fvstrcc = $fvstr+"_cc";
			addAttr -ln $bgen -h true -nc 1 -at compound $ann;
			addAttr -ln $bgen0 -h true -dt "string" -parent $bgen $ann;
			addAttr -ln $bgencc -h true -at long $ann;
			setAttr ($ann+"."+$bgencc) 1;
			
			renameAttr ($ann+"."+$bgen) $fvstr;
			renameAttr ($ann+"."+$bgen0) $fvstr0;
			renameAttr ($ann+"."+$bgencc) $fvstrcc;
		}
		else if ($ft == "MFInt32")
		{
			string $bgen0 = $bgen+"_0";
			string $bgencc = $bgen+"_cc";
			
			string $fvstr0 = $fvstr+"_0";
			string $fvstrcc = $fvstr+"_cc";
			addAttr -ln $bgen -h true -nc 1 -at compound $ann;
			addAttr -ln $bgen0 -h true -at long -parent $bgen $ann;
			addAttr -ln $bgencc -h true -at long $ann;
			setAttr ($ann+"."+$bgencc) 1;
			
			renameAttr ($ann+"."+$bgen) $fvstr;
			renameAttr ($ann+"."+$bgen0) $fvstr0;
			renameAttr ($ann+"."+$bgencc) $fvstrcc;
		}
		else if ($ft == "MFNode")
		{
			string $bgen0 = $bgen+"_0";
			string $bgencc = $bgen+"_cc";
			
			string $fvstr0 = $fvstr+"_0";
			string $fvstrcc = $fvstr+"_cc";
			addAttr -ln $bgen -h true -nc 1 -at compound $ann;
			addAttr -ln $bgen0 -h true -dt "string" -parent $bgen $ann;
			addAttr -ln $bgencc -h true -at long $ann;
			setAttr ($ann+"."+$bgencc) 1;
			
			renameAttr ($ann+"."+$bgen) $fvstr;
			renameAttr ($ann+"."+$bgen0) $fvstr0;
			renameAttr ($ann+"."+$bgencc) $fvstrcc;
		}
		else if ($ft == "MFRotation")
		{
			string $bgen0 = $bgen+"_0";
			string $bgen00 = $bgen0+"_0";
			string $bgen01 = $bgen0+"_1";
			string $bgen02 = $bgen0+"_2";
			string $bgencc = $bgen+"_cc";
			
			string $fvstr0 = $fvstr+"_0";
			string $fvstr00 = $fvstr0+"_0";
			string $fvstr01 = $fvstr0+"_1";
			string $fvstr02 = $fvstr0+"_2";
			string $fvstrcc = $fvstr+"_cc";
			addAttr -ln $bgen -h true -nc 1 -at compound $ann;
			addAttr -ln $bgen0 -h true -at float3 -parent $bgen $ann;
			addAttr -ln $bgen00 -h true -at "float" -parent $bgen0 $ann;
			addAttr -ln $bgen01 -h true -at "float" -parent $bgen0 $ann;
			addAttr -ln $bgen02 -h true -at "float" -parent $bgen0 $ann;
			addAttr -ln $bgencc -h true -at long $ann;
			setAttr ($ann+"."+$bgencc) 1;
			
			renameAttr ($ann+"."+$bgen) $fvstr;
			renameAttr ($ann+"."+$bgen0) $fvstr0;
			renameAttr ($ann+"."+$bgen00) $fvstr00;
			renameAttr ($ann+"."+$bgen01) $fvstr01;
			renameAttr ($ann+"."+$bgen02) $fvstr02;
			renameAttr ($ann+"."+$bgencc) $fvstrcc;
		}
		else if ($ft == "MFString")
		{
			string $bgen0 = $bgen+"_0";
			string $bgencc = $bgen+"_cc";
			
			string $fvstr0 = $fvstr+"_0";
			string $fvstrcc = $fvstr+"_cc";
			addAttr -ln $bgen -h true -nc 1 -at compound $ann;
			addAttr -ln $bgen0 -h true -dt "string" -parent $bgen $ann;
			addAttr -ln $bgencc -h true -at long $ann;
			setAttr ($ann+"."+$bgencc) 1;
			
			renameAttr ($ann+"."+$bgen) $fvstr;
			renameAttr ($ann+"."+$bgen0) $fvstr0;
			renameAttr ($ann+"."+$bgencc) $fvstrcc;
		}
		else if ($ft == "MFTime")
		{
			string $bgen0 = $bgen+"_0";
			string $bgencc = $bgen+"_cc";
			
			string $fvstr0 = $fvstr+"_0";
			string $fvstrcc = $fvstr+"_cc";
			addAttr -ln $bgen -h true -nc 1 -at compound $ann;
			addAttr -ln $bgen0 -h true -at double -parent $bgen $ann;
			addAttr -ln $bgencc -h true -at long $ann;
			setAttr ($ann+"."+$bgencc) 1;
			
			renameAttr ($ann+"."+$bgen) $fvstr;
			renameAttr ($ann+"."+$bgen0) $fvstr0;
			renameAttr ($ann+"."+$bgencc) $fvstrcc;
		}
		else if ($ft == "MFVec2d")
		{
			string $bgen0 = $bgen+"_0";
			string $bgen00 = $bgen0+"_0";
			string $bgen01 = $bgen0+"_1";
			string $bgencc = $bgen+"_cc";
			
			string $fvstr0 = $fvstr+"_0";
			string $fvstr00 = $fvstr0+"_0";
			string $fvstr01 = $fvstr0+"_1";
			string $fvstrcc = $fvstr+"_cc";
			addAttr -ln $bgen -h true -nc 1 -at compound $ann;
			addAttr -ln $bgen0 -h true -at double2 -parent $bgen $ann;
			addAttr -ln $bgen00 -h true -at double -parent $bgen0 $ann;
			addAttr -ln $bgen01 -h true -at double -parent $bgen0 $ann;
			addAttr -ln $bgencc -h true -at long $ann;
			setAttr ($ann+"."+$bgencc) 1;
			
			renameAttr ($ann+"."+$bgen) $fvstr;
			renameAttr ($ann+"."+$bgen0) $fvstr0;
			renameAttr ($ann+"."+$bgen00) $fvstr00;
			renameAttr ($ann+"."+$bgen01) $fvstr01;
			renameAttr ($ann+"."+$bgencc) $fvstrcc;
		}
		else if ($ft == "MFVec2f")
		{
			string $bgen0 = $bgen+"_0";
			string $bgen00 = $bgen0+"_0";
			string $bgen01 = $bgen0+"_1";
			string $bgencc = $bgen+"_cc";
			
			string $fvstr0 = $fvstr+"_0";
			string $fvstr00 = $fvstr0+"_0";
			string $fvstr01 = $fvstr0+"_1";
			string $fvstrcc = $fvstr+"_cc";
			addAttr -ln $bgen -h true -nc 1 -at compound $ann;
			addAttr -ln $bgen0 -h true -at float2 -parent $bgen $ann;
			addAttr -ln $bgen00 -h true -at "float" -parent $bgen0 $ann;
			addAttr -ln $bgen01 -h true -at "float" -parent $bgen0 $ann;
			addAttr -ln $bgencc -h true -at long $ann;
			setAttr ($ann+"."+$bgencc) 1;
			
			renameAttr ($ann+"."+$bgen) $fvstr;
			renameAttr ($ann+"."+$bgen0) $fvstr0;
			renameAttr ($ann+"."+$bgen00) $fvstr00;
			renameAttr ($ann+"."+$bgen01) $fvstr01;
			renameAttr ($ann+"."+$bgencc) $fvstrcc;
		}
		else if ($ft == "MFVec3d")
		{
			string $bgen0 = $bgen+"_0";
			string $bgen00 = $bgen0+"_0";
			string $bgen01 = $bgen0+"_1";
			string $bgen02 = $bgen0+"_2";
			string $bgencc = $bgen+"_cc";
			
			string $fvstr0 = $fvstr+"_0";
			string $fvstr00 = $fvstr0+"_0";
			string $fvstr01 = $fvstr0+"_1";
			string $fvstr02 = $fvstr0+"_2";
			string $fvstrcc = $fvstr+"_cc";
			addAttr -ln $bgen -h true -nc 1 -at compound $ann;
			addAttr -ln $bgen0 -h true -at double3 -parent $bgen $ann;
			addAttr -ln $bgen00 -h true -at double -parent $bgen0 $ann;
			addAttr -ln $bgen01 -h true -at double -parent $bgen0 $ann;
			addAttr -ln $bgen02 -h true -at double -parent $bgen0 $ann;
			addAttr -ln $bgencc -h true -at long $ann;
			setAttr ($ann+"."+$bgencc) 1;
			
			renameAttr ($ann+"."+$bgen) $fvstr;
			renameAttr ($ann+"."+$bgen0) $fvstr0;
			renameAttr ($ann+"."+$bgen00) $fvstr00;
			renameAttr ($ann+"."+$bgen01) $fvstr01;
			renameAttr ($ann+"."+$bgen02) $fvstr02;
			renameAttr ($ann+"."+$bgencc) $fvstrcc;
		}
		else if ($ft == "MFVec3f")
		{
			string $bgen0 = $bgen+"_0";
			string $bgen00 = $bgen0+"_0";
			string $bgen01 = $bgen0+"_1";
			string $bgen02 = $bgen0+"_2";
			string $bgencc = $bgen+"_cc";
			
			string $fvstr0 = $fvstr+"_0";
			string $fvstr00 = $fvstr0+"_0";
			string $fvstr01 = $fvstr0+"_1";
			string $fvstr02 = $fvstr0+"_2";
			string $fvstrcc = $fvstr+"_cc";
			addAttr -ln $bgen -h true -nc 1 -at compound $ann;
			addAttr -ln $bgen0 -h true -at float3 -parent $bgen $ann;
			addAttr -ln $bgen00 -h true -at "float" -parent $bgen0 $ann;
			addAttr -ln $bgen01 -h true -at "float" -parent $bgen0 $ann;
			addAttr -ln $bgen02 -h true -at "float" -parent $bgen0 $ann;
			addAttr -ln $bgencc -h true -at long $ann;
			setAttr ($ann+"."+$bgencc) 1;
			
			renameAttr ($ann+"."+$bgen) $fvstr;
			renameAttr ($ann+"."+$bgen0) $fvstr0;
			renameAttr ($ann+"."+$bgen00) $fvstr00;
			renameAttr ($ann+"."+$bgen01) $fvstr01;
			renameAttr ($ann+"."+$bgen02) $fvstr02;
			renameAttr ($ann+"."+$bgencc) $fvstrcc;
		}
	}
	
	int $fLength = `getAttr ($ann + ".x3dFieldCount")`;
	setAttr ($ann+".fieldName["+$fLength+"]") -type "string" $en;
	setAttr ($ann+".fieldAccess["+$fLength+"]") -type "string" $at;
	setAttr ($ann+".fieldType["+$fLength+"]") -type "string" $ft;
	
	$fLength = $fLength+1;
	setAttr ($ann+".x3dFieldCount") $fLength;
}

global proc removeX3DScriptField(string $nodeName, int $choice)
{
	int $fc = `getAttr ($nodeName+".x3dfc")`;
	string $fNames[];
	string $fAccess[];
	string $fTypes[];
	int $j=0;
	int $i;
	string $atChoice = `getAttr ($nodeName+".fieldAccess["+$choice+"]")`;
	
	for($i=0; $i<$fc; $i++)
	{
		if($i == $choice)
		{
			string $atString = `getAttr ($nodeName+".fieldAccess["+$i+"]")`;
			if($atString == "inputOutput" || $atString == "initializeOnly")
			{
				string $nameString = `getAttr ($nodeName+".fieldName["+$i+"]")`;
				string $ftString = `getAttr ($nodeName+".fieldType["+$i+"]")`;
				string $delString = "x3d_"+$nameString;
				deleteAttr ($nodeName+"."+$delString);
				string $nArray[];
				tokenize($ftString, "F", $nArray);
				print("First Letter: "+$nArray[0]+"\n");
				if($nArray[0] == "M")
				{
					print("First Letter: "+$delString+"\n");
					$delString = $delString+"_cc";
					print("Delete String: "+$delString+"\n");
					deleteAttr ($nodeName+"."+$delString);
				}
			}
		}
		else
		{
			$fNames[$j] = `getAttr ($nodeName+".fieldName["+$i+"]")`;
			$fAccess[$j] = `getAttr ($nodeName+".fieldAccess["+$i+"]")`;
			$fTypes[$j] = `getAttr ($nodeName+".fieldType["+$i+"]")`;
			$j = $j+1;
		}
	}
	
	$fc = $fc-1;
	setAttr ($nodeName+".x3dfc") $fc;
	
	for($i=0;$i<$fc;$i++)
	{
		setAttr ($nodeName+".fieldName["+$i+"]") -type "string" $fNames[$i];
		setAttr ($nodeName+".fieldAccess["+$i+"]") -type "string" $fAccess[$i];
		setAttr ($nodeName+".fieldType["+$i+"]") -type "string" $fTypes[$i];
	}
	setAttr ($nodeName+".fieldName["+$fc+"]") -type "string" "";
	setAttr ($nodeName+".fieldAccess["+$fc+"]") -type "string" "";
	setAttr ($nodeName+".fieldType["+$fc+"]") -type "string" "";
	
	if($atChoice == "inputOnly" || $atChoice == "outputOnly") forceAERefresh($nodeName);
	else evalDeferred("refreshAE");
}